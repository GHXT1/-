{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {},
   "outputs": [],
   "source": [
    "#white_wine_quality\n",
    "import numpy as np\n",
    "import pandas as pd\n",
    "import seaborn as sns\n",
    "import matplotlib.pyplot as plt"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>fixed acidity</th>\n",
       "      <th>volatile acidity</th>\n",
       "      <th>citric acid</th>\n",
       "      <th>residual sugar</th>\n",
       "      <th>chlorides</th>\n",
       "      <th>free sulfur dioxide</th>\n",
       "      <th>total sulfur dioxide</th>\n",
       "      <th>density</th>\n",
       "      <th>pH</th>\n",
       "      <th>sulphates</th>\n",
       "      <th>alcohol</th>\n",
       "      <th>quality</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>7.0</td>\n",
       "      <td>0.27</td>\n",
       "      <td>0.36</td>\n",
       "      <td>20.7</td>\n",
       "      <td>0.045</td>\n",
       "      <td>45.0</td>\n",
       "      <td>170.0</td>\n",
       "      <td>1.0010</td>\n",
       "      <td>3.00</td>\n",
       "      <td>0.45</td>\n",
       "      <td>8.8</td>\n",
       "      <td>6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>6.3</td>\n",
       "      <td>0.30</td>\n",
       "      <td>0.34</td>\n",
       "      <td>1.6</td>\n",
       "      <td>0.049</td>\n",
       "      <td>14.0</td>\n",
       "      <td>132.0</td>\n",
       "      <td>0.9940</td>\n",
       "      <td>3.30</td>\n",
       "      <td>0.49</td>\n",
       "      <td>9.5</td>\n",
       "      <td>6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>8.1</td>\n",
       "      <td>0.28</td>\n",
       "      <td>0.40</td>\n",
       "      <td>6.9</td>\n",
       "      <td>0.050</td>\n",
       "      <td>30.0</td>\n",
       "      <td>97.0</td>\n",
       "      <td>0.9951</td>\n",
       "      <td>3.26</td>\n",
       "      <td>0.44</td>\n",
       "      <td>10.1</td>\n",
       "      <td>6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>7.2</td>\n",
       "      <td>0.23</td>\n",
       "      <td>0.32</td>\n",
       "      <td>8.5</td>\n",
       "      <td>0.058</td>\n",
       "      <td>47.0</td>\n",
       "      <td>186.0</td>\n",
       "      <td>0.9956</td>\n",
       "      <td>3.19</td>\n",
       "      <td>0.40</td>\n",
       "      <td>9.9</td>\n",
       "      <td>6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>7.2</td>\n",
       "      <td>0.23</td>\n",
       "      <td>0.32</td>\n",
       "      <td>8.5</td>\n",
       "      <td>0.058</td>\n",
       "      <td>47.0</td>\n",
       "      <td>186.0</td>\n",
       "      <td>0.9956</td>\n",
       "      <td>3.19</td>\n",
       "      <td>0.40</td>\n",
       "      <td>9.9</td>\n",
       "      <td>6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>8.1</td>\n",
       "      <td>0.28</td>\n",
       "      <td>0.40</td>\n",
       "      <td>6.9</td>\n",
       "      <td>0.050</td>\n",
       "      <td>30.0</td>\n",
       "      <td>97.0</td>\n",
       "      <td>0.9951</td>\n",
       "      <td>3.26</td>\n",
       "      <td>0.44</td>\n",
       "      <td>10.1</td>\n",
       "      <td>6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>6.2</td>\n",
       "      <td>0.32</td>\n",
       "      <td>0.16</td>\n",
       "      <td>7.0</td>\n",
       "      <td>0.045</td>\n",
       "      <td>30.0</td>\n",
       "      <td>136.0</td>\n",
       "      <td>0.9949</td>\n",
       "      <td>3.18</td>\n",
       "      <td>0.47</td>\n",
       "      <td>9.6</td>\n",
       "      <td>6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>7.0</td>\n",
       "      <td>0.27</td>\n",
       "      <td>0.36</td>\n",
       "      <td>20.7</td>\n",
       "      <td>0.045</td>\n",
       "      <td>45.0</td>\n",
       "      <td>170.0</td>\n",
       "      <td>1.0010</td>\n",
       "      <td>3.00</td>\n",
       "      <td>0.45</td>\n",
       "      <td>8.8</td>\n",
       "      <td>6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>6.3</td>\n",
       "      <td>0.30</td>\n",
       "      <td>0.34</td>\n",
       "      <td>1.6</td>\n",
       "      <td>0.049</td>\n",
       "      <td>14.0</td>\n",
       "      <td>132.0</td>\n",
       "      <td>0.9940</td>\n",
       "      <td>3.30</td>\n",
       "      <td>0.49</td>\n",
       "      <td>9.5</td>\n",
       "      <td>6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>8.1</td>\n",
       "      <td>0.22</td>\n",
       "      <td>0.43</td>\n",
       "      <td>1.5</td>\n",
       "      <td>0.044</td>\n",
       "      <td>28.0</td>\n",
       "      <td>129.0</td>\n",
       "      <td>0.9938</td>\n",
       "      <td>3.22</td>\n",
       "      <td>0.45</td>\n",
       "      <td>11.0</td>\n",
       "      <td>6</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   fixed acidity  volatile acidity  citric acid  residual sugar  chlorides  \\\n",
       "0            7.0              0.27         0.36            20.7      0.045   \n",
       "1            6.3              0.30         0.34             1.6      0.049   \n",
       "2            8.1              0.28         0.40             6.9      0.050   \n",
       "3            7.2              0.23         0.32             8.5      0.058   \n",
       "4            7.2              0.23         0.32             8.5      0.058   \n",
       "5            8.1              0.28         0.40             6.9      0.050   \n",
       "6            6.2              0.32         0.16             7.0      0.045   \n",
       "7            7.0              0.27         0.36            20.7      0.045   \n",
       "8            6.3              0.30         0.34             1.6      0.049   \n",
       "9            8.1              0.22         0.43             1.5      0.044   \n",
       "\n",
       "   free sulfur dioxide  total sulfur dioxide  density    pH  sulphates  \\\n",
       "0                 45.0                 170.0   1.0010  3.00       0.45   \n",
       "1                 14.0                 132.0   0.9940  3.30       0.49   \n",
       "2                 30.0                  97.0   0.9951  3.26       0.44   \n",
       "3                 47.0                 186.0   0.9956  3.19       0.40   \n",
       "4                 47.0                 186.0   0.9956  3.19       0.40   \n",
       "5                 30.0                  97.0   0.9951  3.26       0.44   \n",
       "6                 30.0                 136.0   0.9949  3.18       0.47   \n",
       "7                 45.0                 170.0   1.0010  3.00       0.45   \n",
       "8                 14.0                 132.0   0.9940  3.30       0.49   \n",
       "9                 28.0                 129.0   0.9938  3.22       0.45   \n",
       "\n",
       "   alcohol  quality  \n",
       "0      8.8        6  \n",
       "1      9.5        6  \n",
       "2     10.1        6  \n",
       "3      9.9        6  \n",
       "4      9.9        6  \n",
       "5     10.1        6  \n",
       "6      9.6        6  \n",
       "7      8.8        6  \n",
       "8      9.5        6  \n",
       "9     11.0        6  "
      ]
     },
     "execution_count": 21,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data = pd.read_csv('white_wine_quality.csv')  # DataFrame\n",
    "data.head(10)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 4898 entries, 0 to 4897\n",
      "Data columns (total 12 columns):\n",
      " #   Column                Non-Null Count  Dtype  \n",
      "---  ------                --------------  -----  \n",
      " 0   fixed acidity         4898 non-null   float64\n",
      " 1   volatile acidity      4898 non-null   float64\n",
      " 2   citric acid           4898 non-null   float64\n",
      " 3   residual sugar        4897 non-null   float64\n",
      " 4   chlorides             4897 non-null   float64\n",
      " 5   free sulfur dioxide   4895 non-null   float64\n",
      " 6   total sulfur dioxide  4896 non-null   float64\n",
      " 7   density               4898 non-null   float64\n",
      " 8   pH                    4898 non-null   float64\n",
      " 9   sulphates             4895 non-null   float64\n",
      " 10  alcohol               4898 non-null   float64\n",
      " 11  quality               4898 non-null   int64  \n",
      "dtypes: float64(11), int64(1)\n",
      "memory usage: 459.3 KB\n"
     ]
    }
   ],
   "source": [
    "data.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "fixed acidity           0\n",
       "volatile acidity        0\n",
       "citric acid             0\n",
       "residual sugar          1\n",
       "chlorides               1\n",
       "free sulfur dioxide     3\n",
       "total sulfur dioxide    2\n",
       "density                 0\n",
       "pH                      0\n",
       "sulphates               3\n",
       "alcohol                 0\n",
       "quality                 0\n",
       "dtype: int64"
      ]
     },
     "execution_count": 23,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data.isnull().sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "fixed acidity           0\n",
       "volatile acidity        0\n",
       "citric acid             0\n",
       "residual sugar          0\n",
       "chlorides               0\n",
       "free sulfur dioxide     0\n",
       "total sulfur dioxide    0\n",
       "density                 0\n",
       "pH                      0\n",
       "sulphates               0\n",
       "alcohol                 0\n",
       "quality                 0\n",
       "dtype: int64"
      ]
     },
     "execution_count": 24,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data['residual sugar'].fillna(data['residual sugar'].mean(),inplace=True)   # 均值填充，非最佳方案，仅供参考\n",
    "data['chlorides'].fillna(data['chlorides'].mean(),inplace=True)   # 均值填充，非最佳方案，仅供参考\n",
    "data['free sulfur dioxide'].fillna(data['free sulfur dioxide'].mean(),inplace=True)   # 均值填充，非最佳方案，仅供参考\n",
    "data['total sulfur dioxide'].fillna(data['total sulfur dioxide'].mean(),inplace=True)   # 均值填充，非最佳方案，仅供参考\n",
    "data['sulphates'].fillna(data['sulphates'].mean(),inplace=True)   # 均值填充，非最佳方案，仅供参考\n",
    "data.isnull().sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 720x576 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "8.8\n",
      "数据异常值个数为： 4\n",
      "数据异常值的最大值为： 14.2\n",
      "数据异常值的最小值为： 10.7\n"
     ]
    }
   ],
   "source": [
    "plt.figure(figsize=(10,8))\n",
    "p = plt.boxplot(data['fixed acidity'].values,whis=3.0,notch=True) ##画出箱线图\n",
    "outlier1 = p['fliers'][0].get_ydata() ##fliers为异常值的标签\n",
    "plt.show()\n",
    "mean1 = data['fixed acidity'].quantile(q=0.25)#下四分位差\n",
    "mean2 =data['fixed acidity'].quantile(q=0.75)#上四分位差\n",
    "mean3 = mean2-mean1#中位差\n",
    "topnum2 = mean2+1.5*mean3\n",
    "bottomnum2 = mean2-1.5*mean3\n",
    "print(topnum2)\n",
    "print('数据异常值个数为：',len(outlier1))\n",
    "print('数据异常值的最大值为：',max(outlier1))\n",
    "print('数据异常值的最小值为：',min(outlier1))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAAkkAAAHSCAYAAAD4yV8pAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjMuMywgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy/Il7ecAAAACXBIWXMAAAsTAAALEwEAmpwYAAAPf0lEQVR4nO3dT6yddV7H8c93bjNIiSkETk10phYof0wbxj83BJCZRBHjn8kYjAsks1CM3Rgd3IiuBpcmLnBF0ox/Fiom4rBxMUGQARaGcJlpIgU0EWGkqD2g0wqEMgw/F1MIlC/c0+ScPrfc1ytpuOfcp08+h03ffZ7Tc2uMEQAA3u8TUw8AANiKRBIAQEMkAQA0RBIAQEMkAQA0RBIAQGPHKk56ySWXjL17967i1AAAS/Xkk0++PMaYnf78SiJp79692djYWMWpAQCWqqpe6J53uw0AoCGSAAAaIgkAoCGSAAAaIgkAoCGSAAAaC0VSVX2pqp6qqiNVdceKNwEATG7TSKqqA0l+M8m1ST6T5PNVtW/VwwAAprTIlaQfSfL4GOP1McZbSR5J8surnQUAMK1FIumpJJ+tqourameSX0jy6dXOAgCY1qY/lmSM8UxV/VGSB5K8luRwku+eflxVHUxyMEn27Nmz3JUAAGfZQm/cHmP86RjjJ8YYn0vyv0n+tTnm0BhjfYyxPpt94GfEAQCcUxb6AbdVtXuMcayq9uR770e6brWzAACmtVAkJfm7qro4yXeS/NYY49urmwQAML2FImmM8dlVDwEA2Ep84jYAQEMkAQA0RBIAQGPRN24DnJGqmnrCwsYYU08AtiCRBKzEKsKjqgQNcNa43QYA0BBJAAANkQQA0BBJAAANkQQA0BBJAAANkQQA0BBJAAANkQQA0BBJAAANkQQA0BBJAAANkQQA0BBJAAANkQQA0BBJAAANkQQA0BBJAAANkQQA0BBJAAANkQQA0BBJAAANkQQA0BBJAAANkQQA0BBJAAANkQQA0BBJAAANkQQA0BBJAAANkQQA0BBJAAANkQQA0BBJAAANkQQA0BBJAAANkQQA0BBJAAANkQQA0BBJAAANkQQA0BBJAAANkQQA0BBJAAANkQQA0BBJAAANkQQA0BBJAAANkQQA0BBJAAANkQQA0BBJAAANkQQA0BBJAAANkQQA0BBJAAANkQQA0BBJAAANkQQA0BBJAAANkQQA0BBJAAANkQQA0BBJAACNhSKpqn63qo5U1VNVdW9Vfd+qhwEATGnTSKqqH0ryO0nWxxgHkqwluXXVwwAAprTo7bYdSc6vqh1JdiZ5aXWTAACmt2kkjTGOJvnjJN9K8p9Jjo8xHjj9uKo6WFUbVbUxn8+XvxQA4Cxa5HbbRUl+KcmlSX4wyQVV9cXTjxtjHBpjrI8x1mez2fKXAgCcRYvcbvuZJP8+xpiPMb6T5KtJbljtLACAaS0SSd9Kcl1V7ayqSnJTkmdWOwsAYFqLvCfp8ST3JflGkn8+9XsOrXgXAMCkdixy0Bjjy0m+vOItAABbhk/cBgBoiCQAgIZIAgBoiCQAgIZIAgBoiCQAgIZIAgBoiCQAgIZIAgBoiCQAgIZIAgBoiCQAgIZIAgBoiCQAgIZIAgBoiCQAgIZIAgBoiCQAgIZIAgBoiCQAgIZIAgBoiCQAgIZIAgBoiCQAgIZIAgBoiCQAgIZIAgBoiCQAgIZIAgBoiCQAgIZIAgBoiCQAgIZIAgBoiCQAgIZIAgBoiCQAgIZIAgBoiCQAgIZIAgBoiCQAgIZIAgBoiCQAgIZIAgBoiCQAgIZIAgBoiCQAgIZIAgBoiCQAgMaOqQcA07rzzjvzyCOPTD1jYdddd93UEz7SpZdemnvvvXfqGcASiCTY5h577LHcfvvtueaaa6aesqnrr78+d99999QzPtTx48dz2223TT0DWBKRBOTAgQNb/gpNkowxpp7wkV555ZWpJwBL5D1JAAANkQQA0BBJAAANkQQA0BBJAAANkQQA0BBJAAANkQQA0BBJAAANkQQA0BBJAAANkQQA0BBJAAANkQQA0BBJAAANkQQA0BBJAACNTSOpqq6qqsPv+XWiqu44C9sAACazY7MDxhj/kuRHk6Sq1pIcTXL/amcBAEzrTG+33ZTk38YYL6xiDADAVnGmkXRrkntXMQQAYCtZOJKq6pNJvpDkbz/k+weraqOqNubz+bL2AQBM4kyuJP18km+MMf67++YY49AYY32MsT6bzZazDgBgImcSSb8at9oAgG1ioUiqqguS3Jzkq6udAwCwNWz6EQBJMsZ4LcnFK94CALBl+MRtAICGSAIAaIgkAICGSAIAaIgkAICGSAIAaIgkAICGSAIAaCz0YZLAx9fa2lruvPPO7Nu3L7PZLLt3785sNnv31zuPd+7cOfXUyZ08eTLz+Tzz+TzHjh179+t3Hr/00ktZW1ubeiawJDXGWPpJ19fXx8bGxtLPCyzfc889lyNHjrR/6L/367W1tQ8NqNMf7969+5yIqpMnT777Oj/q9b/z+I033njf6z39/8Hu3buzb9++HDhwYOqXBpyBqnpyjLF++vOuJME2d9lll+Wyyy77yGPefPPNPP/88zly5EiOHDmSp59+OocPH86zzz6bkydPfuD4Xbt25dt3LP8vYMt2XpJPJ9nzhyfe9/za2lquuOKK7N+/PzfffHP279+f/fv35/LLL8/5558/yVbg7HMlCba5d4Lno66kvPrqq7n44osXvpJ00UUX5ROf2PpveRxj5Pjx4wtfSZrP5znvvPM+cPXovV9fddVVufbaa6d+acAZ+LArSSIJtrkbb7wxO3fuzNVXX93+oT+bzXLhhReeE9GzamOMnDhx4kMj6ujRo3n44Yczn8+nngqcAbfbgNbbb7+du+66KzfccMPUU7a8qsquXbuya9eu7Nu37wPff+WVV3LllVdOsAxYBX81BABoiCQAgIZIAgBoiCQAgIZIAgBoiCQAgIZIAgBoiCQAgIZIAgBoiCQAgIZIAgBoiCQAgIZIAgBoiCQAgIZIAgBoiCQAgIZIAgBoiCQAgIZIAgBoiCQAgIZIAgBoiCQAgIZIAgBoiCQAgIZIAgBoiCQAgIZIAgBoiCQAgIZIAgBoiCQAgIZIAgBoiCQAgIZIAgBoiCQAgMaOqQcA03riiSfy4IMP5vXXX596yjnvxIkTU08AlkgkwTb31ltv5Z577smjjz469ZRNPfTQQ7npppumnvGRbrnllqknAEsikmCbG2NMPWFhVZUHH3xw6hnANuE9SQAADZEEANAQSQAADZEEANAQSQAADZEEANAQSQAADZEEANAQSQAADZEEANAQSQAADZEEANAQSQAADZEEANAQSQAADZEEANAQSQAADZEEANBYKJKq6sKquq+qnq2qZ6rq+lUPAwCY0o4Fj/uTJF8bY/xKVX0yyc4VbgIAmNymkVRVu5J8LsmvJckY480kb652FgDAtBa53XZpknmSP6+qb1bVV6rqgtMPqqqDVbVRVRvz+XzpQwEAzqZFImlHkh9Pcs8Y48eSvJbk908/aIxxaIyxPsZYn81mS54JAHB2LRJJLyZ5cYzx+KnH9+V70QQA8LG1aSSNMf4ryX9U1VWnnropydMrXQUAMLFF/3Xbbyf5q1P/su25JL++ukkAANNbKJLGGIeTrK92CgDA1uETtwEAGiIJAKAhkgAAGiIJAKAhkgAAGiIJAKAhkgAAGiIJAKAhkgAAGiIJAKAhkgAAGiIJAKAhkgAAGiIJAKAhkgAAGiIJAKAhkgAAGiIJAKAhkgAAGiIJAKAhkgAAGiIJAKAhkgAAGiIJAKAhkgAAGiIJAKAhkgAAGiIJAKAhkgAAGiIJAKAhkgAAGiIJAKAhkgAAGiIJAKAhkgAAGiIJAKAhkgAAGiIJAKAhkgAAGiIJAKAhkgAAGiIJAKAhkgAAGiIJAKAhkgAAGiIJAKAhkgAAGiIJAKAhkgAAGiIJAKAhkgAAGiIJAKAhkgAAGiIJAKAhkgAAGiIJAKAhkgAAGiIJAKAhkgAAGiIJAKAhkgAAGiIJAKAhkgAAGiIJAKAhkgAAGiIJAKAhkgAAGiIJAKCxY5GDqur5JP+X5LtJ3hpjrK9yFADA1BaKpFN+aozx8sqWAABsIW63AQA0Fo2kkeSBqnqyqg6uchAAwFaw6O22G8cYR6tqd5J/qKpnxxiPvveAU/F0MEn27Nmz5JkAAGfXQleSxhhHT/33WJL7k1zbHHNojLE+xlifzWbLXQkAcJZtGklVdUFVff87Xyf52SRPrXoYAMCUFrnd9gNJ7q+qd47/6zHG11a6CgBgYptG0hjjuSSfOQtbAAC2DB8BAADQEEkAAA2RBADQEEkAAA2RBADQEEkAAA2RBADQEEkAAA2RBADQEEkAAA2RBADQEEkAAA2RBADQEEkAAA2RBADQEEkAAA2RBADQEEkAAA2RBADQEEkAAA2RBADQEEkAAA2RBADQEEkAAA2RBADQEEkAAA2RBADQEEkAAA2RBADQEEkAAA2RBADQEEkAAA2RBADQEEkAAA2RBADQEEkAAA2RBADQEEkAAA2RBADQEEkAAA2RBADQEEkAAA2RBADQEEkAAA2RBADQEEkAAA2RBADQEEkAAA2RBADQEEkAAA2RBADQEEkAAA2RBADQEEkAAA2RBADQEEkAAA2RBADQEEkAAA2RBADQEEkAAA2RBADQEEkAAA2RBADQEEkAAA2RBADQEEkAAA2RBADQEEkAAA2RBADQWDiSqmqtqr5ZVX+/ykEAAFvBmVxJ+lKSZ1Y1BABgK1kokqrqU0l+MclXVjsHAGBrWPRK0t1Jfi/J26ubAgCwdWwaSVX1+STHxhhPbnLcwaraqKqN+Xy+tIEAAFNY5ErSTyb5QlU9n+Rvkvx0Vf3l6QeNMQ6NMdbHGOuz2WzJMwEAzq5NI2mM8QdjjE+NMfYmuTXJP44xvrjyZQAAE/I5SQAAjR1ncvAY4+tJvr6SJQAAW4grSQAADZEEANAQSQAADZEEANAQSQAADZEEANAQSQAADZEEANAQSQAADZEEANA4ox9LArCoqjpnzjvGWPo5gXOfSAJWQngA5zq32wAAGiIJAKAhkgAAGiIJAKAhkgAAGiIJAKAhkgAAGiIJAKAhkgAAGiIJAKAhkgAAGiIJAKAhkgAAGiIJAKAhkgAAGiIJAKAhkgAAGiIJAKBRY4zln7RqnuSFpZ8Y2O4uSfLy1COAj50fHmPMTn9yJZEEsApVtTHGWJ96B7A9uN0GANAQSQAADZEEnEsOTT0A2D68JwkAoOFKEgBAQyQBW15V/VlVHauqp6beAmwfIgk4F/xFkp+begSwvYgkYMsbYzya5H+m3gFsLyIJAKAhkgAAGiIJAKAhkgAAGiIJ2PKq6t4k/5Tkqqp6sap+Y+pNwMefT9wGAGi4kgQA0BBJAAANkQQA0BBJAAANkQQA0BBJAAANkQQA0BBJAACN/wfyhsKAJlBhdQAAAABJRU5ErkJggg==\n",
      "text/plain": [
       "<Figure size 720x576 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "replace_value1=data['fixed acidity'][data['fixed acidity']>topnum2].min()\n",
    "data.loc[data['fixed acidity']>topnum2,'fixed acidity']=replace_value1\n",
    "plt.figure(figsize=(10,8))\n",
    "p = plt.boxplot(data['fixed acidity'].values,whis=3.0,notch=True) ##画出箱线图\n",
    "outlier1 = p['fliers'][0].get_ydata() ##fliers为异常值的标签\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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PavHrrrqqmzdurXDqYBx4c4UMPKuuOKKPPXUU3nHO96R733ve3nHO96Rp556KldccUXXowFjwJ0pYOQdOnQol112WR566KH83M/9XJLksssuy6FDhzqeDBgH7kwBI6/Wmueeey6f+tSnsrS0lE996lN57rnnrJkCzgkxBWwIO3bsyP79+3PxxRdn//792bFjR9cjAWPC13zAhnDw4MHVn+0vBZxL7kwBADQQU8CGUEo5ac2UDTuBc0VMARvCjTfemDvvvDMXXnhh7rzzztx4441djwSMCQ86Bkbe6e5C+Rt9wHrwoGNgQ3tlp/PXve51J/2vHdCBc0FMASPvxRdfzBve8IbVu1C11rzhDW/Iiy++2PFkwDgQU8CG8PWvfz3Hjh1LrTXHjh3L17/+9a5HAsaEfaaADeG6667LCy+8sPr69a9/fYfTAOPEnSlg5G3atCkvvPBCLr300nzta1/LpZdemhdeeCGbNvnzInD2+S8NMPJeeumllFLyzDPP5Bd/8ReTvPw3/F566aWOJwPGgTtTwIZQa83tt9+eZ599NrfffrstEYBzxj5TwMgrpWTHjh359re/vXrszW9+cx5//HFRBawL+0wBG97jjz+em266KT/84Q9z00035fHHH+96JGBMWDMFjLxSSi699NLcf//92b59e5LksssuyzPPPNPxZMA4EFNAZ9bzYcRPP/30KV+v1zV8XQi8Fl/zAZ2pta7bP+973/tWw6mUkve9733r+vkAr8WdKWBDePDBB5O8HFLHjh3reBpgnLgzBQDQQEwBADQQUwAADcQUAEADMQUA0EBMAQA0EFMAAA3EFABAAzEFANBATAEANBBTAAANxBQAQAMxBQDQYE0xVUp5fynlb0opB0spv/ca5/zzUspjpZRHSyn3rO+YAADnp01nOqGUMpHkM0nem+RQkodLKffXWh874Zzrk/z7JL9aa32mlHLF2RoYAOB8spY7U29LcrDW+q1a65Ekn09y06vOuTXJZ2qtzyRJrfUH6zsmAMD5aS0xdXWS757w+tDxYyd6S5K3lFL+TynlS6WU95/qg0opt5VSFkopC4cPH/7ZJgYAOI+s1wL0TUmuT/LuJLuT/LdSyiWvPqnW+tla62StdXL79u3rdGkAgO6sJaaeTHLtCa+vOX7sRIeS3F9rXam1fjvJN/JyXAEAbGhriamHk1xfSnlzKWVLkg8muf9V59yXl+9KpZRyeV7+2u9b6zcmAMD56YwxVWt9KcmHkzyYZDHJvbXWR0spHyulfOD4aQ8m+VEp5bEkc0n+Xa31R2draACA80WptXZy4cnJybqwsNDJtYGNq5SSrv67BmxcpZRHaq2Tp3rPDugAAA3EFABAAzEFANBATAEANBBTAAANxBQAQAMxBQDQQEwBADQQUwAADcQUAEADMQUA0EBMAQA0EFMAAA3EFABAAzEFANBATAEANBBTAAANxBQAQAMxBQDQQEwBADQQUwAADcQUAEADMQUA0EBMAQA0EFMAAA3EFABAAzEFANBATAEANBBTAAANxBQAQAMxBQDQQEwBADQQUwAADcQUAEADMQUA0EBMAQA0EFMAAA3EFABAAzEFANBATAEANBBTAAANxBQAQAMxBQDQQEwBADQQUwAADcQUAEADMQUA0EBMAQA0EFMAAA3EFABAAzEFANBATAEANBBTAAANxBQAQAMxBQDQQEwBADQQUwAADcQUAEADMQUA0EBMAQA0EFMAAA3EFABAAzEFANBATAEANBBTAAANxBQAQAMxBQDQQEwBADRYU0yVUt5fSvmbUsrBUsrvnea8f1ZKqaWUyfUbEQDg/HXGmCqlTCT5TJIbk9yQZHcp5YZTnHdxkn+b5MvrPSQAwPlqLXem3pbkYK31W7XWI0k+n+SmU5z38SSfTLK8jvMBAJzX1hJTVyf57gmvDx0/tqqU8itJrq21/s91nA0A4LzXvAC9lPK6JJ9O8jtrOPe2UspCKWXh8OHDrZcGAOjcWmLqySTXnvD6muPHXnFxkn6S/11KeTzJP0ly/6kWoddaP1trnay1Tm7fvv1nnxoA4Dyxlph6OMn1pZQ3l1K2JPlgkvtfebPW+uNa6+W11h211h1JvpTkA7XWhbMyMQDAeeSMMVVrfSnJh5M8mGQxyb211kdLKR8rpXzgbA8IAHA+27SWk2qtX0zyxVcd+/3XOPfd7WMBAIwGO6ADADQQUwAADcQUAEADMQUA0EBMAQA0EFMAAA3EFABAAzEFANBATAEANBBTAAANxBQAQAMxBQDQQEwBADQQUwAADcQUAEADMQUA0EBMAQA0EFMAAA3EFABAAzEFANBATAEANBBTAAANxBQAQAMxBQDQQEwBADTY1PUAwPnvRz/6Ue6+++4cO3as61HW5OMf/3jXI5zRzTffnOuuu67rMYB1IKaAM3rkkUeyb9++/OZv/mbXo6zJkSNHuh7htP7sz/4sl1xySQaDQdejAOtATAFr8gu/8AsjccdnFGZ89tlnux4BWEfWTAEANBBTAAANxBQAQAMxBQDQQEwBADQQUwAADcQUAEADMQUA0EBMAQA0EFMAAA3EFABAAzEFANBATAEANBBTAAANxBQAQAMxBQDQQEwBADQQUwAADcQUAECDTV0PAIyG559/Pn/7t3+biy66KBdddFFe//rX53Wv8+extai1Znl5Oc8//3yef/75PP30012PBKwjMQWc0bXXXpulpaW8973vzfPPP5+lpaW88MILueCCC1bj6sILL/x7//xLv/RLueKKK7r+9U7rJz/5Sf76r/86S0tLqzH0yv8Ha/15aWkpW7ZsWf29L7zwwvz2b/92178asE7EFHBGP//zP59PfOITee6551bj4Mc//nEOHz6c73//+3nqqafy/e9/P9/5znfy7LPPnvIzNm3atBpSr0TFwj/95rn9RX4GFyf5tST/+E+vOSmmjhw5csrzL7roolx55ZW58sorc9VVV+Wqq67KFVdckTe+8Y0nBeXb3/72c/p7AGePmALO6C//8i/zW7/1W5mamjophq688spcd911a7obtWXLlq5/jSaP/sHJr1dWVk6683Smu1SPP/746s9f/vKX87u/+7v50Ic+1MnvAqwvMQWc0bFjx/LWt7419957b9ejnDc2b96cSy65JJdccsnf+98dDAY5duzY+g8FdMLqUQCABmIKAKCBmAIAaCCmAAAaiCkAgAZiCgCggZgCAGggpgAAGogpAIAGYgoAoIGYAgBoIKYAABqIKQCABmIKAKCBmAIAaCCmAAAabOp6AOD8Nz8/nz//8z/P9ddf3/UoG8IPfvCD/OEf/mHXYwDrZE0xVUp5f5L/nGQiyR/XWj/xqvfvSPJvkryU5HCSW2qtT6zzrEBHBoNB3vOe9+Tqq6/uepQzestb3pJvfOMbXY9xRjt27Oh6BGCdlFrr6U8oZSLJN5K8N8mhJA8n2V1rfeyEc6aSfLnW+tNSyu1J3l1r/Ren+9zJycm6sLDQOj/ASUopOdN/1wD+vkopj9RaJ0/13lrWTL0tycFa67dqrUeSfD7JTSeeUGudq7X+9PjLLyW5pmVgAIBRsZaYujrJd094fej4sdcyneSBlqEAAEbFui5AL6X8yySTSd71Gu/fluS2JHnTm960npcGAOjEWu5MPZnk2hNeX3P82ElKKb+eZJjkA7XWF0/1QbXWz9ZaJ2utk9u3b/9Z5gUAOK+sJaYeTnJ9KeXNpZQtST6Y5P4TTyilvDXJf83LIfWD9R8TAOD8dMaYqrW+lOTDSR5Mspjk3lrro6WUj5VSPnD8tP+U5KIkf1pK+Wop5f7X+DgAgA1lTWumaq1fTPLFVx37/RN+/vV1ngsAYCR4nAwAQAMxBQDQQEwBADQQUwAADcQUAEADMQUA0EBMAQA0EFMAAA3EFABAAzEFANBATAEANBBTAAANxBQAQAMxBQDQQEwBADQQUwAADcQUAEADMQUA0EBMAQA0EFMAAA3EFABAAzEFANBATAEANBBTAAANxBQAQAMxBQDQQEwBADQQUwAADcQUAEADMQUA0EBMAQA0EFMAAA3EFABAAzEFANBATAEANBBTAAANxBQAQAMxBQDQQEwBADQQUwAADcQUAECDTV0PAIyvUsrIfG6tdd0/E9gYxBTQGYECbAS+5gMAaCCmAAAaiCkAgAZiCgCggZgCAGggpgAAGogpAIAGYgoAoIGYAgBoIKYAABqIKQCABmIKAKCBmAIAaCCmAAAaiCkAgAZiCgCggZgCAGggpgAAGpRaazcXLuVwkic6uTiwkV2e5IddDwFsOP+w1rr9VG90FlMAZ0MpZaHWOtn1HMD48DUfAEADMQUA0EBMARvNZ7seABgv1kwBADRwZwoAoIGYAjaEUsr+UsoPSikHup4FGC9iCtgo/iTJ+7seAhg/YgrYEGqtf5Hk6a7nAMaPmAIAaCCmAAAaiCkAgAZiCgCggZgCNoRSymySv0ryj0oph0op013PBIwHO6ADADRwZwoAoIGYAgBoIKYAABqIKQCABmIKAKCBmAIAaCCmAAAaiCkAgAb/H5mmKx2H7Yw1AAAAAElFTkSuQmCC\n",
      "text/plain": [
       "<Figure size 720x576 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0.48500000000000004\n",
      "数据异常值个数为： 39\n",
      "数据异常值的最大值为： 1.1\n",
      "数据异常值的最小值为： 0.655\n"
     ]
    }
   ],
   "source": [
    "plt.figure(figsize=(10,8))\n",
    "p = plt.boxplot(data['volatile acidity'].values,whis=3.0,notch=True) ##画出箱线图\n",
    "outlier1 = p['fliers'][0].get_ydata() ##fliers为异常值的标签\n",
    "plt.show()\n",
    "mean1 = data['volatile acidity'].quantile(q=0.25)#下四分位差\n",
    "mean2 =data['volatile acidity'].quantile(q=0.75)#上四分位差\n",
    "mean3 = mean2-mean1#中位差\n",
    "topnum2 = mean2+1.5*mean3\n",
    "bottomnum2 = mean2-1.5*mean3\n",
    "print(topnum2)\n",
    "print('数据异常值个数为：',len(outlier1))\n",
    "print('数据异常值的最大值为：',max(outlier1))\n",
    "print('数据异常值的最小值为：',min(outlier1))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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p06dmvUYwJSIKWAi11xzzSVxxWeMMesRNnTttdfOegRgijwzBQDQIKYAABrEFABAg5gCAGgQUwAADWIKAKBBTAEANIgpAIAGMQUA0CCmAAAaxBQAQIOYAgBoEFMAAA0TxVRV3VlVx6vqRFXdv87x362qf6+qr1fVv1TVnumPCgAwfzaMqarakuRgkruS7Ely7zqx9OgY42fGGLcleTjJ56c9KADAPJrkytTeJCfGGC+MMd5M8liSfWsXjDFeWbP5E0nG9EYEAJhfWydYszPJyprt00l+4fxFVfV7ST6VZFuSX5nKdAAAc25qD6CPMQ6OMX46yR8m+eP11lTV/qparqrl1dXVaZ0aAGBmJompM0kW12zvOrfvQh5L8uvrHRhjPDLGWBpjLC0sLEw8JADAvJokpp5JclNV3VhV25Lck+TQ2gVVddOazV9L8vz0RgQAmF8bPjM1xni7qg4keTzJliRfGmM8V1UPJVkeYxxKcqCqPprkrSQvJ/ntzRwaAGBeTPIAesYYh5McPm/fA2u+v2/KcwEAXBJ8AjoAQIOYAgBoEFMAAA1iCgCgQUwBADSIKQCABjEFANAgpgAAGsQUAECDmAIAaBBTAAANYgoAoEFMAQA0iCkAgAYxBQDQIKYAABrEFABAg5gCAGgQUwAADWIKAKBBTAEANIgpAIAGMQUA0CCmAAAaxBQAQIOYAgBoEFMAAA1iCgCgQUwBADSIKQCABjEFTOTb3/52vvrVr+bYsWN57bXXZj3OJef111/P888/n6997Wt5/vnnZz0OMEVbZz0AMP9uueWW3H777Xn44YezsrKSlZWVXH311VlcXPx/XzfccEMWFxeza9euXH311bMe/T3x1ltv5cUXX3z3Z/PO16lTp979/tVXX83OnTvf/Tndcccdsx4bmJIaY8zkxEtLS2N5eXkm5wZ6xhh56aWXLhgOKysrefHFF3PdddetG1zvfO3cuTNbtmyZ9du5qDFGvvOd71z0va6urub973//ReNyYWEhV13lZgBcqqrq6Bhjad1jYgrYDC+//HKOHj2aI0eO5MiRI3nyySfzyiuv/NCa8eBPzmi6H139yf/Nfs011+T222/Phz/84XzkIx/J3r178773vS9VNcMJgc0kpoCpev311y96S2tlZSVnz5696FWpxcXFXHvttbN+KxN54403cvr06Qu+15WVlbz5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\n",
      "text/plain": [
       "<Figure size 720x576 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "replace_value1=data['volatile acidity'][data['volatile acidity']>topnum2].min()\n",
    "data.loc[data['volatile acidity']>topnum2,'volatile acidity']=replace_value1\n",
    "plt.figure(figsize=(10,8))\n",
    "p = plt.boxplot(data['volatile acidity'].values,whis=3.0,notch=True) ##画出箱线图\n",
    "outlier1 = p['fliers'][0].get_ydata() ##fliers为异常值的标签\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x576 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0.5700000000000001\n",
      "数据异常值个数为： 22\n",
      "数据异常值的最大值为： 1.66\n",
      "数据异常值的最小值为： 0.78\n"
     ]
    },
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAAlMAAAHSCAYAAADIRU4IAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjMuMywgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy/Il7ecAAAACXBIWXMAAAsTAAALEwEAmpwYAAATd0lEQVR4nO3df6jld53f8dfbGVKkiWI6M2lJJj/cTiqhLrW9TStiG1sXEqpJYXdLtAUV26Fg7MLWxZSWiOlfu8L2D8kfG6xUFmzWCi5TOiWou8va0qxz08pqorFjmm0mYmbWxBVSk+w47/6Rq9zM3uQefZ/JOTPzeECY8/1+P5zv+9w/Ls98z/eeU90dAAB+Oq9a9QAAAOczMQUAMCCmAAAGxBQAwICYAgAYEFMAAAN7V3Xiffv29bXXXruq0wMALOzBBx/84+7ev9OxlcXUtddem83NzVWdHgBgYVX1Ry91bKG3+arq5qp6pKqOV9WdL7HmH1XVw1X1UFV9+qcdFgDgfLLrlamq2pPkniQ/l+REkmNVdaS7H9625lCSf5XkLd39dFUdOFcDAwCsk0WuTN2Y5Hh3P9rdzye5L8ltZ635Z0nu6e6nk6S7Ty53TACA9bRITF2Z5PFt2ye29m13fZLrq+q/V9UDVXXzsgYEAFhny7oBfW+SQ0luSnJVkt+vqjd29/e2L6qqw0kOJ8nVV1+9pFMDAKzOIlemnkhycNv2VVv7tjuR5Eh3/2l3/58k38wLcfUi3X1vd29098b+/Tv+dSEAwHllkZg6luRQVV1XVZckuT3JkbPW/HZeuCqVqtqXF972e3R5YwIArKddY6q7Tye5I8n9Sb6e5DPd/VBV3V1Vt24tuz/Jd6vq4SS/m+RXuvu752poAIB1Ud29khNvbGy0D+0EAM4HVfVgd2/sdMx38wEADIgpAIABMQUAMCCmAAAGxBQAwICYAgAYEFMAAANiCgBgQEwBAAzsXfUAwMWrqlY9wsJW9W0RwPoTU8DKnItAqSrhA7yivM0HADAgpgAABsQUAMCAmAIAGBBTAAADYgoAYEBMAQAMiCkAgAExBQAwIKYAAAbEFADAgJgCABgQUwAAA2IKAGBATAEADIgpAIABMQUAMCCmAAAGxBQAwICYAgAYEFMAAANiCgBgQEwBAAyIKQCAATEFADAgpgAABsQUAMCAmAIAGBBTAAADYgoAYEBMAQAMiCkAgAExBQAwIKYAAAbEFADAgJgCABgQUwAAA2IKAGBATAEADIgpAIABMQUAMCCmAAAGxBQAwICYAgAYEFMAAANiCgBgQEwBAAyIKQCAgYViqqpurqpHqup4Vd25w/H3VtWpqvrK1n//dPmjAgCsn727LaiqPUnuSfJzSU4kOVZVR7r74bOW/lZ333EOZgQAWFuLXJm6Mcnx7n60u59Pcl+S287tWAAA54dFYurKJI9v2z6xte9sP19Vf1hVn62qg0uZDgBgzS3rBvT/nOTa7v7ZJJ9P8qmdFlXV4ararKrNU6dOLenUAACrs0hMPZFk+5Wmq7b2/Vh3f7e7n9va/ESSv7HTE3X3vd290d0b+/fv/2nmBQBYK4vE1LEkh6rquqq6JMntSY5sX1BVf2nb5q1Jvr68EQEA1teuf83X3aer6o4k9yfZk+ST3f1QVd2dZLO7jyT5F1V1a5LTSZ5K8t5zODMAwNqo7l7JiTc2Nnpzc3Ml5wYuXFWVVf1eAy5cVfVgd2/sdMwnoAMADIgpAIABMQUAMCCmAAAGxBQAwICYAgAYEFMAAANiCgBgQEwBAAyIKQCAATEFADAgpgAABsQUAMCAmAIAGBBTAAADYgoAYEBMAQAMiCkAgAExBQAwIKYAAAbEFADAgJgCABgQUwAAA2IKAGBATAEADIgpAIABMQUAMCCmAAAGxBQAwICYAgAYEFMAAANiCgBgQEwBAAyIKQCAATEFADAgpgAABsQUAMCAmAIAGBBTAAADYgoAYEBMAQAMiCkAgAExBQAwIKYAAAbEFADAgJgCABgQUwAAA2IKAGBATAEADIgpAIABMQUAMCCmAAAGxBQAwICYAgAYEFMAAANiCgBgQEwBAAyIKQCAATEFADAgpgAABhaKqaq6uaoeqarjVXXny6z7+arqqtpY3ogAAOtr15iqqj1J7klyS5Ibkryrqm7YYd1lSX4pyR8se0gAgHW1yJWpG5Mc7+5Hu/v5JPcluW2Hdf82ya8meXaJ8wEArLVFYurKJI9v2z6xte/HquqvJznY3f/l5Z6oqg5X1WZVbZ46deonHhYAYN2Mb0Cvqlcl+fUk/3K3td19b3dvdPfG/v37p6cGAFi5RWLqiSQHt21ftbXvRy5L8leT/F5VPZbkbyc54iZ0AOBisEhMHUtyqKquq6pLktye5MiPDnb3n3T3vu6+truvTfJAklu7e/OcTAwAsEZ2januPp3kjiT3J/l6ks9090NVdXdV3XquBwQAWGd7F1nU3UeTHD1r310vsfam+VgAAOeHhWIKuLg9++yz+cIXvpAzZ86sepSFHDlyZPdFK/bWt741r3vd61Y9BrAEYgrY1Ze+9KW8733vy5vf/OZVj7KQT3ziE6se4WV99atfzYc+9KF84AMfWPUowBKIKWBX3Z03velN58UVn/PBBz/4wfPmKh+wO190DAAwIKYAAAbEFADAgJgCABgQUwAAA2IKAGBATAEADIgpAIABMQUAMCCmAAAGxBQAwICYAgAYEFMAAANiCgBgQEwBAAyIKQCAATEFADAgpgAABsQUAMCAmAIAGBBTAAADYgoAYEBMAQAMiCkAgAExBQAwIKYAAAbEFADAgJgCABgQUwAAA2IKAGBATAEADIgpAIABMQUAMCCmAAAGxBQAwICYAgAYEFMAAANiCgBgQEwBAAyIKQCAATEFADAgpgAABsQUAMDA3lUPAJwfvv3tb+dzn/tcDhw4kCuuuCIHDhzIZZddlqpa9Whr75lnnsnJkydz8uTJPPnkk/nGN76R66+/ftVjAUsipoBdvfGNb8xb3vKWfOpTn8qTTz754yj44Q9/+KK42v747H/37duXPXv2rPqlLMWZM2fy9NNPv+hn8XL/nj59OldcccWPfxYHDx7MTTfdtOqXASxJdfdKTryxsdGbm5srOTewHNuvuLxUTDzxxBP51re+lTNnzmTfvn0viqx3v/vdecc73rHql/GyvvzlL+fjH//4i17XqVOncvr06Vx33XU5ePDgrjF56aWXuoIH57mqerC7N3Y65soU8BPp7jzzzDN/JpxeKqa+//3vZ9++fTvGxjs2/3Gy5v9PdWOS3/yZ5Ff+4uE/8/pOnDiRp556aqErcwcOHMhrX/taUQUXIFemgF1985vfzHve85585zvfyZNPPpkkLxsN2/ddfvnlF8zbe2c7c+ZMvve97+0Ykjvte+655378c/nYxz6Wt73tbat+CcCCXJkCRh577LF0d774xS/mwIEDufTSS1c90lp41atelcsvvzyXX3553vCGN+y6/gc/+EFOnjyZD3/4w/na174mpuACIaaAhbzmNa/J61//+lWPcV579atfnWuuuSb79+9f9SjAEvmcKQCAATEFADAgpgAABsQUAMCAmAIAGBBTAAADC8VUVd1cVY9U1fGqunOH4/+8qr5aVV+pqv9WVTcsf1QAgPWza0xV1Z4k9yS5JckNSd61Qyx9urvf2N1/LcmvJfn1ZQ8KALCOFrkydWOS4939aHc/n+S+JLdtX9Dd39+2+eeTrOY7agAAXmGLfAL6lUke37Z9IsnfOntRVX0gyS8nuSTJ31vKdAAAa25pN6B39z3d/TNJPpzk3+y0pqoOV9VmVW2eOnVqWacGAFiZRWLqiSQHt21ftbXvpdyX5B/udKC77+3uje7e8N1UAMCFYJGYOpbkUFVdV1WXJLk9yZHtC6rq0LbNf5Dkfy9vRACA9bXrPVPdfbqq7khyf5I9ST7Z3Q9V1d1JNrv7SJI7qurtSf40ydNJ3nMuhwYAWBeL3ICe7j6a5OhZ++7a9viXljwXAMB5wSegAwAMiCkAgAExBQAwIKYAAAbEFADAgJgCABgQUwAAA2IKAGBATAEADIgpAIABMQUAMCCmAAAGxBQAwICYAgAY2LvqAYD1d/z48Xz+85/PXXfdtepRLggPPPBArr/++lWPASyJmAJ2dejQoRw6dCh7967/r4yPfOQj+ehHP7rqMV7WO9/5ztxyyy2rHgNYkurulZx4Y2OjNzc3V3Ju4MJVVVnV7zXgwlVVD3b3xk7H3DMFADAgpgAABsQUAMCAmAIAGBBTAAADYgoAYEBMAQAMiCkAgAExBQAwIKYAAAbEFADAgJgCABgQUwAAA2IKAGBATAEADIgpAIABMQUAMCCmAAAGxBQAwICYAgAYEFMAAANiCgBgQEwBAAyIKQCAATEFADAgpgAABsQUAMCAmAIAGBBTAAADYgoAYEBMAQAMiCkAgAExBQAwIKYAAAbEFADAgJgCABgQUwAAA2IKAGBATAEADIgpAIABMQUAMCCmAAAGFoqpqrq5qh6pquNVdecOx3+5qh6uqj+sqi9W1TXLHxUAYP3sGlNVtSfJPUluSXJDkndV1Q1nLftfSTa6+2eTfDbJry17UACAdbTIlakbkxzv7ke7+/kk9yW5bfuC7v7d7v5/W5sPJLlquWMCAKynRWLqyiSPb9s+sbXvpbw/yX+dDAUAcL7Yu8wnq6p/kmQjyd99ieOHkxxOkquvvnqZpwYAWIlFrkw9keTgtu2rtva9SFW9Pcm/TnJrdz+30xN1973dvdHdG/v37/9p5gUAWCuLxNSxJIeq6rqquiTJ7UmObF9QVW9K8ht5IaROLn9MAID1tGtMdffpJHckuT/J15N8prsfqqq7q+rWrWUfS3Jpkv9UVV+pqiMv8XQAABeUhe6Z6u6jSY6ete+ubY/fvuS5AADOCz4BHQBgQEwBAAyIKQCAATEFADAgpgAABsQUAMCAmAIAGBBTAAADYgoAYEBMAQAMiCkAgAExBQAwIKYAAAbEFADAgJgCABgQUwAAA2IKAGBATAEADIgpAIABMQUAMCCmAAAGxBQAwICYAgAYEFMAAANiCgBgQEwBAAyIKQCAATEFADAgpgAABsQUAMCAmAIAGBBTAAADYgoAYEBMAQAMiCkAgAExBQAwIKYAAAbEFADAgJgCABgQUwAAA2IKAGBATAEADIgpAIABMQUAMCCmAAAGxBQAwICYAgAYEFMAAANiCgBgQEwBAAyIKQCAATEFADAgpgAABsQUAMCAmAIAGBBTAAADYgoAYEBMAQAMiCkAgIGFYqqqbq6qR6rqeFXducPxv1NV/7OqTlfVLyx/TACA9bRrTFXVniT3JLklyQ1J3lVVN5y17P8meW+STy97QACAdbZ3gTU3Jjne3Y8mSVXdl+S2JA//aEF3P7Z17Mw5mBEAYG0t8jbflUke37Z9YmsfAMBF7xW9Ab2qDlfVZlVtnjp16pU8NQDAObFITD2R5OC27au29v3Euvve7t7o7o39+/f/NE8BALBWFompY0kOVdV1VXVJktuTHDm3YwEAnB92januPp3kjiT3J/l6ks9090NVdXdV3ZokVfU3q+pEkl9M8htV9dC5HBoAYF0s8td86e6jSY6ete+ubY+P5YW3/wAALio+AR0AYEBMAQAMiCkAgAExBQAwIKYAAAbEFADAgJgCABgQUwAAA2IKAGBATAEADIgpAIABMQUAMCCmAAAGxBQAwICYAgAYEFMAAANiCgBgQEwBAAyIKQCAATEFADAgpgAABsQUAMCAmAIAGBBTAAADYgoAYEBMAQAMiCkAgAExBQAwIKYAAAbEFADAgJgCABgQUwAAA2IKAGBATAEADIgpAIABMQUAMCCmAAAGxBQAwICYAgAYEFMAAANiCgBgQEwBAAyIKQCAATEFADAgpgAABsQUAMCAmAIAGBBTAAADYgoAYEBMAQAMiCkAgAExBQAwIKYAAAbEFADAgJgCABgQUwAAA2IKAGBATAEADIgpAICBhWKqqm6uqkeq6nhV3bnD8T9XVb+1dfwPqurapU8KALCGdo2pqtqT5J4ktyS5Icm7quqGs5a9P8nT3f2Xk/y7JL+67EEBANbRIlembkxyvLsf7e7nk9yX5Laz1tyW5FNbjz+b5O9XVS1vTACA9bRITF2Z5PFt2ye29u24prtPJ/mTJH9hGQMCAKyzva/kyarqcJLDSXL11Ve/kqcG1tC5uoB9Lp63u5f+nMCFYZGYeiLJwW3bV23t22nNiaram+S1Sb579hN1971J7k2SjY0Nv5ngIidQgAvBIm/zHUtyqKquq6pLktye5MhZa44kec/W419I8jvttyQAcBHY9cpUd5+uqjuS3J9kT5JPdvdDVXV3ks3uPpLk3yf5zao6nuSpvBBcAAAXvIXumeruo0mOnrXvrm2Pn03yi8sdDQBg/fkEdACAATEFADAgpgAABsQUAMCAmAIAGBBTAAADYgoAYEBMAQAMiCkAgAExBQAwIKYAAAbEFADAgJgCABgQUwAAA2IKAGCguns1J646leSPVnJy4EK2L8kfr3oI4IJzTXfv3+nAymIK4Fyoqs3u3lj1HMDFw9t8AAADYgoAYEBMAReae1c9AHBxcc8UAMCAK1MAAANiCrggVNUnq+pkVX1t1bMAFxcxBVwo/kOSm1c9BHDxEVPABaG7fz/JU6ueA7j4iCkAgAExBQAwIKYAAAbEFADAgJgCLghV9R+T/I8kf6WqTlTV+1c9E3Bx8AnoAAADrkwBAAyIKQCAATEFADAgpgAABsQUAMCAmAIAGBBTAAADYgoAYOD/A42uBSHd0pCvAAAAAElFTkSuQmCC\n",
      "text/plain": [
       "<Figure size 720x576 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(10,8))\n",
    "p = plt.boxplot(data['citric acid'].values,whis=3.0,notch=True) ##画出箱线图\n",
    "outlier1 = p['fliers'][0].get_ydata() ##fliers为异常值的标签\n",
    "plt.show()\n",
    "mean1 = data['citric acid'].quantile(q=0.25)#下四分位差\n",
    "mean2 =data['citric acid'].quantile(q=0.75)#上四分位差\n",
    "mean3 = mean2-mean1#中位差\n",
    "topnum2 = mean2+1.5*mean3\n",
    "bottomnum2 = mean2-1.5*mean3\n",
    "print(topnum2)\n",
    "print('数据异常值个数为：',len(outlier1))\n",
    "print('数据异常值的最大值为：',max(outlier1))\n",
    "print('数据异常值的最小值为：',min(outlier1))\n",
    "replace_value1=data['citric acid'][data['citric acid']>topnum2].min()\n",
    "data.loc[data['citric acid']>topnum2,'citric acid']=replace_value1\n",
    "plt.figure(figsize=(10,8))\n",
    "p = plt.boxplot(data['citric acid'].values,whis=3.0,notch=True) ##画出箱线图\n",
    "outlier1 = p['fliers'][0].get_ydata() ##fliers为异常值的标签\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 720x576 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "22.200000000000003\n",
      "数据异常值个数为： 1\n",
      "数据异常值的最大值为： 65.8\n",
      "数据异常值的最小值为： 65.8\n"
     ]
    },
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAAlAAAAHSCAYAAAAjcvULAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjMuMywgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy/Il7ecAAAACXBIWXMAAAsTAAALEwEAmpwYAAAQVUlEQVR4nO3dT4hd93nH4e8bqzbI7sJBY2NsuVIcRyNBYjkMoeAGAiHF8ibxJjSEJouAS2jAhVJwukm7y6btJk2pSpx40aYE2sSBmJbEFBwZUzo2xX86Y5SoFrYsxePExMEJmEx/XWRsZEuy9M7cmXtH8zwgzr3nnJnfq83w0TlnrmqMEQAALt27pj0AAMB2I6AAAJoEFABAk4ACAGgSUAAATQIKAKBp11YutmfPnrFv376tXBIAYF0ef/zxl8cYc+c7tqUBtW/fviwuLm7lkgAA61JVJy90zC08AIAmAQUA0CSgAACaBBQAQJOAAgBoElAAAE0CCgCgSUABADQJKACAJgEFANAkoAAAmgQUAECTgAIAaBJQAABNAgoAoElAAQA0CSgAgCYBBQDQtGvaAwA7S1VNe4RLNsaY9gjAjBJQwJbajCipKrEDbCm38AAAmgQUAECTgAIAaBJQAABNAgoAoElAAQA0CSgAgCYBBQDQJKAAAJoEFABAk4ACAGgSUAAATQIKAKBJQAEANAkoAIAmAQUA0CSgAACaBBQAQJOAAgBoElAAAE0CCgCgSUABADQJKACAJgEFANAkoAAAmgQUAECTgAIAaBJQAABNAgoAoElAAQA0CSgAgCYBBQDQJKAAAJoEFABAk4ACAGgSUAAATQIKAKBJQAEANAkoAIAmAQUA0CSgAACaLhpQVbW3qv6jqv6nqp6pqnvX9r+7qr5fVcfXttdu/rgAANN3KVegfp3kT8cYh5L8bpI/rqpDSe5L8vAY49YkD6+9BwC47F00oMYYp8cYT6y9/kWSpSQ3Jvl4kgfWTnsgySc2aUYAgJnSegaqqvYluT3Jfya5foxxeu3QmSTXX+Br7qmqxapaXFlZ2cisAAAz4ZIDqqquSfIvSf5kjPHq2cfGGCPJON/XjTGOjjEWxhgLc3NzGxoWAGAWXFJAVdVv5Tfx9I9jjH9d2/2Tqrph7fgNSV7anBEBAGbLpfwWXiX5WpKlMcZfn3Xou0k+u/b6s0kenPx4AACzZ9clnHNHkj9M8lRV/ffavj9P8uUk36qqzyU5meSTmzIhAMCMuWhAjTGOJakLHP7oZMcBAJh9PokcAKBJQAEANAkoAIAmAQUA0CSgAACaBBQAQJOAAgBoElAAAE0CCgCgSUABADQJKACAJgEFANAkoAAAmgQUAECTgAIAaBJQAABNAgoAoElAAQA0CSgAgCYBBQDQJKAAAJoEFABAk4ACAGgSUAAATQIKAKBJQAEANAkoAIAmAQUA0CSgAACaBBQAQJOAAgBoElAAAE0CCgCgSUABADQJKACAJgEFANAkoAAAmgQUAECTgAIAaBJQAABNAgoAoElAAQA0CSgAgCYBBQDQJKAAAJoEFABAk4ACAGgSUAAATQIKAKBJQAEANAkoAIAmAQUA0CSgAACaBBQAQJOAAgBoElAAAE0CCgCgSUABADQJKACAJgEFANAkoAAAmgQUAECTgAIAaBJQAABNAgoAoElAAQA0CSgAgCYBBQDQJKAAAJoEFABAk4ACAGgSUAAATQIKAKBJQAEANAkoAIAmAQUA0CSgAACaBBQAQJOAAgBoElAAAE0CCgCg6aIBVVX3V9VLVfX0Wfv+oqpOVdV/r/25a3PHBACYHZdyBeobSe48z/6/GWMcXvvz0GTHAgCYXRcNqDHGI0l+tgWzAABsCxt5BuoLVfXk2i2+ay90UlXdU1WLVbW4srKygeUAAGbDegPq75LckuRwktNJ/upCJ44xjo4xFsYYC3Nzc+tcDgBgdqwroMYYPxljrI4x/i/JPyT50GTHAgCYXesKqKq64ay3dyd5+kLnAgBcbnZd7ISq+maSjyTZU1UvJPlSko9U1eEkI8lzSf5o80YEAJgtFw2oMcanzrP7a5swCwDAtuCTyAEAmgQUAECTgAIAaBJQAABNAgoAoElAAQA0CSgAgCYBBQDQJKAAAJoEFABAk4ACAGgSUAAATQIKAKBJQAEANAkoAIAmAQUA0CSgAACaBBQAQJOAAgBoElAAAE0CCgCgSUABADQJKACAJgEFANAkoAAAmgQUAECTgAIAaBJQAABNAgoAoElAAQA0CSgAgCYBBQDQJKAAAJoEFABAk4ACAGgSUAAATQIKAKBJQAEANAkoAIAmAQUA0CSgAACaBBQAQJOAAgBoElAAAE0CCgCgSUABADQJKACAJgEFANAkoAAAmgQUAECTgAIAaBJQAABNAgoAoElAAQA0CSgAgCYBBQDQJKAAAJoEFABAk4ACAGgSUAAATQIKAKBJQAEANAkoAIAmAQUA0CSgAACaBBQAQJOAAgBoElAAAE0CCgCgSUABADQJKACAJgEFANAkoAAAmgQUAECTgAIAaBJQAABNAgoAoElAAQA0CSgAgCYBBQDQdNGAqqr7q+qlqnr6rH3vrqrvV9Xxte21mzsmAMDsuJQrUN9Icufb9t2X5OExxq1JHl57DwCwI1w0oMYYjyT52dt2fzzJA2uvH0jyicmOBQAwu9b7DNT1Y4zTa6/PJLl+QvMAAMy8DT9EPsYYScaFjlfVPVW1WFWLKysrG10OAGDqdq3z635SVTeMMU5X1Q1JXrrQiWOMo0mOJsnCwsIFQwuYLc8880y+8pWvTHuMS/b5z39+2iO8o6rKF7/4xezdu3faowATsN6A+m6Szyb58tr2wYlNBMyERx99NE899VQ+/elPT3uUS/KBD3xg2iO8o69+9as5cuSIgILLxEUDqqq+meQjSfZU1QtJvpTfhNO3qupzSU4m+eRmDglMx6FDh2b+yk4y+1efkuShhx6a9gjABF00oMYYn7rAoY9OeBYAgG3BJ5EDADQJKACAJgEFANAkoAAAmgQUAECTgAIAaBJQAABNAgoAoElAAQA0CSgAgCYBBQDQJKAAAJoEFABAk4ACAGgSUAAATQIKAKBJQAEANAkoAIAmAQUA0CSgAACaBBQAQJOAAgBoElAAAE0CCgCgSUABADQJKACAJgEFANAkoAAAmgQUAECTgAIAaBJQAABNAgoAoElAAQA0CSgAgCYBBQDQJKAAAJoEFABAk4ACAGgSUAAATQIKAKBJQAEANAkoAIAmAQUA0CSgAACaBBQAQJOAAgBoElAAAE0CCgCgSUABADQJKACAJgEFANAkoAAAmgQUAECTgAIAaBJQAABNAgoAoElAAQA0CSgAgCYBBQDQJKAAAJoEFABAk4ACAGgSUAAATQIKAKBJQAEANAkoAIAmAQUA0CSgAACaBBQAQJOAAgBoElAAAE0CCgCgSUABADQJKACAJgEFANAkoAAAmgQUAECTgAIu6MSJE3nsscfyyiuvTHuUbWtlZSU//OEPc+rUqWmPAkzQrmkPAMymD3/4wzl27FjuvffeLC8vZ/fu3Zmfn8/8/HwOHjz45vamm27Ku961s/8ttrq6mpMnT2ZpaSnLy8tvbpeXl7O6upqDBw/m8OHDuf3226c9KjAhNcbYssUWFhbG4uLilq0HTMYYIy+++OI5gbC0tJRXX301Bw4ceEtYzc/P59Zbb81VV1017dEn6le/+lWeffbZcyLp+PHj2bNnz1vC8o3tddddl6qa9ujAOlTV42OMhfMeE1DARvz85z9/MyTODquTJ09m796950TFBz/4wZkPq9deey1PPPHEWyJpaWkpZ86cyS233HJOJL3vfe/LNddcM+2xgQnbtICqqueS/CLJapJfX2iRNwgouPyNMXLq1Kk8+eST+d73vpfvfOc7efHFF5Mku3fvzmt/tn2eHKi/fDVJsn///tx99905cuRI3v/+97uqBDvEZgfUwhjj5Us5X0DB5eP111/Pj3/843Ou0iwvL+fqq68+7+2sG2+8cds8L/XGc01vv123tLSU1dXVc/5u8/Pz2b9/f3bt2j6BCLwzAQWs2/lu0S0vL+e5557LzTfffE5IHDhwINdee+20x95UL7/88nkfGD99+vQ5t/jm5+dz4MABt/hgG9rMgPrfJK8kGUn+foxx9J3OF1CwffzgBz/IZz7zmTcfEj87CA4ePJj3vve9M/8s01b75S9/mePHj58TV8ePH8/c3FwefPDBHD58eNpjApfonQJqo9eaf2+Mcaqqrkvy/apaHmM88rbF70lyT5LcfPPNG1wO2ConTpzIxz72sXz961/fNrfdpm337t257bbbctttt71l/+rqau666648//zzAgouExv6qTjGOLW2fSnJt5N86DznHB1jLIwxFubm5jayHLDFrrrqKvE0AVdccUWuvPLKaY8BTNC6fzJW1dVV9dtvvE7y+0mentRgAACzaiO38K5P8u21X+XdleSfxhj/NpGpAABm2LoDaoxxIsltFz0RAOAy4+EGAIAmAQUA0CSgAACaBBQAQJOAAgBoElAAAE0CCgCgSUABADQJKACAJgEFANAkoAAAmgQUAECTgAIAaBJQAABNAgoAoElAAQA0CSgAgCYBBQDQJKAAAJoEFABAk4ACAGgSUAAATQIKAKBJQAEANAkoAIAmAQUA0CSgAACaBBQAQJOAAgBoElAAAE0CCgCgSUABADQJKACAJgEFANAkoAAAmgQUAECTgAIAaBJQAABNAgoAoElAAQA0CSgAgCYBBQDQJKAAAJoEFABAk4ACAGgSUAAATQIKAKBJQAEANAkoAIAmAQUA0CSgAACaBBQAQJOAAgBo2jXtAYDZdObMmRw7dizHjh2b9iiXhZ/+9KfTHgGYIAEFnNfJkyeztLSU++67b9qjXNSjjz6aO+64Y9pjvKNdu3blPe95z7THACakxhhbttjCwsJYXFzcsvWAnaGqspU/y4CdoaoeH2MsnO+YZ6AAAJoEFABAk4ACAGgSUAAATQIKAKBJQAEANAkoAIAmAQUA0CSgAACaBBQAQJOAAgBoElAAAE0CCgCgSUABADQJKACAJgEFANAkoAAAmgQUAEDTrmkPAOwsVbVtvu8YY+LfE7g8CChgS4kS4HLgFh4AQJOAAgBoElAAAE0CCgCgSUABADRtKKCq6s6qeraqflRV901qKACAWbbugKqqK5L8bZIjSQ4l+VRVHZrUYAAAs2ojV6A+lORHY4wTY4zXk/xzko9PZiwAgNm1kYC6McnzZ71/YW0fAMBlbdMfIq+qe6pqsaoWV1ZWNns5AIBNt5GAOpVk71nvb1rb9xZjjKNjjIUxxsLc3NwGlgMAmA0bCaj/SnJrVe2vqiuT/EGS705mLACA2bXu/0x4jPHrqvpCkn9PckWS+8cYz0xsMgCAGbXugEqSMcZDSR6a0CwAANuCTyIHAGgSUAAATQIKAKBJQAEANNUYY+sWq1pJcnLLFgR2ij1JXp72EMBl53fGGOf9EMstDSiAzVBVi2OMhWnPAewcbuEBADQJKACAJgEFXA6OTnsAYGfxDBQAQJMrUAAATQIK2Laq6v6qeqmqnp72LMDOIqCA7ewbSe6c9hDAziOggG1rjPFIkp9New5g5xFQAABNAgoAoElAAQA0CSgAgCYBBWxbVfXNJI8lOVBVL1TV56Y9E7Az+CRyAIAmV6AAAJoEFABAk4ACAGgSUAAATQIKAKBJQAEANAkoAIAmAQUA0PT/mO4ahXkgzpEAAAAASUVORK5CYII=\n",
      "text/plain": [
       "<Figure size 720x576 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(10,8))\n",
    "p = plt.boxplot(data['residual sugar'].values,whis=3.0,notch=True) ##画出箱线图\n",
    "outlier1 = p['fliers'][0].get_ydata() ##fliers为异常值的标签\n",
    "plt.show()\n",
    "mean1 = data['residual sugar'].quantile(q=0.25)#下四分位差\n",
    "mean2 =data['residual sugar'].quantile(q=0.75)#上四分位差\n",
    "mean3 = mean2-mean1#中位差\n",
    "topnum2 = mean2+1.5*mean3\n",
    "bottomnum2 = mean2-1.5*mean3\n",
    "print(topnum2)\n",
    "print('数据异常值个数为：',len(outlier1))\n",
    "print('数据异常值的最大值为：',max(outlier1))\n",
    "print('数据异常值的最小值为：',min(outlier1))\n",
    "replace_value1=data['residual sugar'][data['residual sugar']>topnum2].min()\n",
    "data.loc[data['residual sugar']>topnum2,'residual sugar']=replace_value1\n",
    "plt.figure(figsize=(10,8))\n",
    "p = plt.boxplot(data['residual sugar'].values,whis=3.0,notch=True) ##画出箱线图\n",
    "outlier1 = p['fliers'][0].get_ydata() ##fliers为异常值的标签\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x576 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0.07100000000000001\n",
      "数据异常值个数为： 131\n",
      "数据异常值的最大值为： 0.34600000000000003\n",
      "数据异常值的最小值为： 0.09300000000000001\n"
     ]
    },
    {
     "data": {
      "image/png": "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EVnveMc78uSTT273GCf0lre8ZbtHALaIyAJesR07duTyyy/f7jE27WSIQeDU4ZksAIABIgsAYIDIAgAYILIAAAaILACAASILAGCAyAIAGCCyAAAGiCwAgAEiCwBggMgCABggsgAABogsAIABIgsAYIDIAgAYILIAAAaILACAASILAGCAyAIAGCCyAAAGiCwAgAEiCwBggMgCABggsgAABogsAIABIgsAYIDIAgAYILIAAAaILACAASILAGCAyAIAGCCyAAAGbCqyquqqqnq0qg5W1U0brJ9eVfcu1h+qqj2L81dU1SOL19eq6hNbPD8AwFI6YWRV1c4ktyX5cJJLklxbVZes23Z9kue6+6Iktya5ZXH+G0lWuvuyJFcl+a9VtWuLZgcAWFqbuZN1RZKD3f1Yd7+Q5J4ke9ft2ZvkrsXxfUmurKrq7h9199HF+Tcm6a0YGgBg2W0mss5N8via908szm24ZxFVzyc5K0mq6r1VdSDJ15N8ak10vaSqbqiq1apaPXz48K9+FQAAS2b8wffufqi7L03yW0n+fVW9cYM9t3f3Snev7N69e3okAIBxm4msQ0nOX/P+vMW5Dfcsnrk6M8kzazd0918mOZLkH7zSYQEAThabiayHk1xcVRdW1WlJrkmyb92efUmuWxxfneTB7u7F1+xKkqr69STvSvJXWzI5AMASO+Hf9Ovuo1V1Y5IHkuxMcmd3H6iqm5Osdve+JHckubuqDiZ5NsdDLEl+O8lNVfXTJMeSfLq7n564EACAZVLdy/UX/lZWVnp1dXW7xwBOMVWVZft5B5z8qmp/d69stOYT3wEABogsAIABIgsAYIDIAgAYILIAAAaILACAASILAGCAyAIAGCCyAAAGiCwAgAEiCwBggMgCABggsgAABogsAIABIgsAYIDIAgAYILIAAAaILACAASILAGCAyAIAGCCyAAAGiCwAgAEiCwBggMgCABggsgAABogsAIABIgsAYIDIAgAYILIAAAaILACAASILAGCAyAIAGCCyAAAGiCwAgAEiCwBggMgCABggsgAABogsAIABIgsAYIDIAgAYILIAAAaILACAASILAGCAyAIAGCCyAAAGiCwAgAEiCwBggMgCABggsgAABogsAIABIgsAYIDIAgAYILIAAAZsKrKq6qqqerSqDlbVTRusn15V9y7WH6qqPYvzH6yq/VX19cV///EWzw8AsJROGFlVtTPJbUk+nOSSJNdW1SXrtl2f5LnuvijJrUluWZx/Osk/7e7fTHJdkru3anAAgGW2mTtZVyQ52N2PdfcLSe5Jsnfdnr1J7loc35fkyqqq7v6L7n5ycf5Akr9TVadvxeAAAMtsM5F1bpLH17x/YnFuwz3dfTTJ80nOWrfnnyX58+7+21c2KgDAyWPXa/FNqurSHP8V4odeZv2GJDckyQUXXPBajAQAMGozd7IOJTl/zfvzFuc23FNVu5KcmeSZxfvzkvzPJP+6u7+10Tfo7tu7e6W7V3bv3v2rXQEAwBLaTGQ9nOTiqrqwqk5Lck2Sfev27MvxB9uT5OokD3Z3V9WvJfnTJDd19//dopkBAJbeCSNr8YzVjUkeSPKXSf5Hdx+oqpur6mOLbXckOauqDib5N0l+9jEPNya5KMlnq+qRxeucLb8KAIAlU9293TP8nJWVlV5dXd3uMYBTTFVl2X7eASe/qtrf3SsbrfnEdwCAASILAGCAyAIAGCCyAAAGiCwAgAEiCwBggMgCABggsgAABogsAIABIgsAYIDIAgAYILIAAAaILACAASILAGCAyAIAGCCyAAAGiCwAgAEiCwBggMgCABggsgAABogsAIABIgsAYIDIAgAYILIAAAaILACAASILAGCAyAIAGCCyAAAGiCwAgAEiCwBggMgCABggsgAABogsAIABIgsAYIDIAgAYILIAAAaILACAASILAGCAyAIAGCCyAAAGiCwAgAEiCwBggMgCABggsgAABogsAIABIgsAYIDIAgAYILIAAAaILACAASILAGCAyAIAGCCyAAAGiCwAgAEiCwBgwKYiq6quqqpHq+pgVd20wfrpVXXvYv2hqtqzOH9WVf3vqjpSVX+4xbMDACytE0ZWVe1McluSDye5JMm1VXXJum3XJ3muuy9KcmuSWxbnf5LkPyb5/S2bGADgJLCZO1lXJDnY3Y919wtJ7kmyd92evUnuWhzfl+TKqqru/mF3/58cjy0AgNeNzUTWuUkeX/P+icW5Dfd099Ekzyc5aysGBAA4GS3Fg+9VdUNVrVbV6uHDh7d7HACAV20zkXUoyflr3p+3OLfhnqraleTMJM9sdojuvr27V7p7Zffu3Zv9MgCApbWZyHo4ycVVdWFVnZbkmiT71u3Zl+S6xfHVSR7s7t66MQEATi67TrShu49W1Y1JHkiyM8md3X2gqm5Ostrd+5LckeTuqjqY5NkcD7EkSVX9VZK/m+S0qvp4kg919ze3/EoAAJbICSMrSbr7/iT3rzv32TXHP0nyyZf52j2vYj4AgJPSUjz4DgBwqtnUnSyA11JVnTR/rsdPgZcjsoClI1yAU4FfFwIADBBZAAADRBYAwACRBQAwQGQBAAwQWQAAA0QWAMAAkQUAMEBkAQAMEFkAAANEFgDAAJEFADBAZAEADBBZAAADRBYAwACRBQAwQGQBAAwQWQAAA6q7t3uGn1NVh5P89XbPAZxyzk7y9HYPAZxyfr27d2+0sHSRBTChqla7e2W75wBeP/y6EABggMgCABggsoDXi9u3ewDg9cUzWQAAA9zJAgAYILKAU1pV3VlV36+qb2z3LMDri8gCTnX/LclV2z0E8PojsoBTWnf/WZJnt3sO4PVHZAEADBBZAAADRBYAwACRBQAwQGQBp7Sq+qMkX03y96vqiaq6frtnAl4ffOI7AMAAd7IAAAaILACAASILAGCAyAIAGCCyAAAGiCwAgAEiCwBggMgCABjw/wFjA/3risbejwAAAABJRU5ErkJggg==\n",
      "text/plain": [
       "<Figure size 720x576 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(10,8))\n",
    "p = plt.boxplot(data['chlorides'].values,whis=3.0,notch=True) ##画出箱线图\n",
    "outlier1 = p['fliers'][0].get_ydata() ##fliers为异常值的标签\n",
    "plt.show()\n",
    "mean1 = data['chlorides'].quantile(q=0.25)#下四分位差\n",
    "mean2 =data['chlorides'].quantile(q=0.75)#上四分位差\n",
    "mean3 = mean2-mean1#中位差\n",
    "topnum2 = mean2+1.5*mean3\n",
    "bottomnum2 = mean2-1.5*mean3\n",
    "print(topnum2)\n",
    "print('数据异常值个数为：',len(outlier1))\n",
    "print('数据异常值的最大值为：',max(outlier1))\n",
    "print('数据异常值的最小值为：',min(outlier1))\n",
    "replace_value1=data['chlorides'][data['chlorides']>topnum2].min()\n",
    "data.loc[data['chlorides']>topnum2,'chlorides']=replace_value1\n",
    "plt.figure(figsize=(10,8))\n",
    "p = plt.boxplot(data['chlorides'].values,whis=3.0,notch=True) ##画出箱线图\n",
    "outlier1 = p['fliers'][0].get_ydata() ##fliers为异常值的标签\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x576 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "80.5\n",
      "数据异常值个数为： 8\n",
      "数据异常值的最大值为： 289.0\n",
      "数据异常值的最小值为： 118.5\n"
     ]
    },
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAAlAAAAHSCAYAAAAjcvULAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjMuMywgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy/Il7ecAAAACXBIWXMAAAsTAAALEwEAmpwYAAAUy0lEQVR4nO3dW6xlB33f8d8fhnut2uDTwbVjD1eDVW7tEXJEVakYKqJWsUGIWxVNIld+6SUpRcWFh4CEBEiVaYSqSlZMmYcUcF2QrRClIBcUVYpojsElgBPZMTPEY3vmcDFOXVF8+fdhtoMxM57znzln9p6Zz0ca7XXbZ/23H6yv1tpnneruAACwdU9b9gAAAKcbAQUAMCSgAACGBBQAwJCAAgAYElAAAEO7TuXJzj///N6zZ8+pPCUAwAm57bbbvt/da0fbd0oDas+ePdnY2DiVpwQAOCFVdeBY+9zCAwAYElAAAEMCCgBgSEABAAwJKACAIQEFADAkoAAAhgQUAMCQgAIAGBJQAABDAgoAYEhAAQAMCSgAgCEBBQAwJKAAAIYEFADAkIACABgSUAAAQ7uWPQBwdqmqZY+wZd297BGAFbWlgKqqf53knyXpJH+a5DeSXJDks0lekOS2JL/W3T/doTmBM8RORElViR3glDruLbyqujDJv0qy3t1/J8nTk7wryceTfKK7X5rkR0mu3slBAQBWxVa/A7UryXOqaleS5ya5L8kbk9y02L8vyVXbPh0AwAo6bkB198Ek/z7J93IknH6cI7fsHujuRxaH3ZPkwp0aEgBglWzlFt55Sa5M8qIkfzvJ85K8ZasnqKprqmqjqjY2NzdPeFAAgFWxlVt4b0ry3e7e7O6Hk3w+yRuSnLu4pZckFyU5eLQ3d/f13b3e3etra2vbMjQAwDJtJaC+l+TyqnpuHfn94yuSfCfJV5K8fXHM3iQ378yIAACrZSvfgfpajnxZ/Os58giDpyW5Psn7k7y3qu7KkUcZ3LCDcwIArIwtPQequ387yW8/afPdSV6/7RMBAKw4f8oFAGBIQAEADAkoAIAhAQUAMCSgAACGBBQAwJCAAgAYElAAAEMCCgBgSEABAAwJKACAIQEFADAkoAAAhgQUAMCQgAIAGBJQAABDAgoAYEhAAQAMCSgAgCEBBQAwJKAAAIYEFADAkIACABgSUAAAQwIKAGBIQAEADAkoAIAhAQUAMCSgAACGBBQAwJCAAgAYElAAAEMCCgBgSEABAAwJKACAIQEFADAkoAAAhgQUAMCQgAIAGBJQAABDAgoAYOi4AVVVl1bV7U/492BV/VZVPb+qvlxVdy5ezzsVAwMALNtxA6q7/7y7X9vdr03y95L83yRfSHJtklu7+2VJbl2sAwCc8aa38K5I8hfdfSDJlUn2LbbvS3LVNs4FALCypgH1riSfWSzv7u77Fsv3J9m9bVMBAKywLQdUVT0zya8m+a9P3tfdnaSP8b5rqmqjqjY2NzdPeFAAgFUxuQL1K0m+3t2HFuuHquqCJFm8Hj7am7r7+u5e7+71tbW1k5sWAGAFTALq3fnZ7bskuSXJ3sXy3iQ3b9dQAACrbEsBVVXPS/LmJJ9/wuaPJXlzVd2Z5E2LdQCAM96urRzU3Q8lecGTtv0gR34rDwDgrOJJ5AAAQwIKAGBIQAEADAkoAIAhAQUAMCSgAACGBBQAwJCAAgAYElAAAEMCCgBgSEABAAwJKACAIQEFADAkoAAAhgQUAMCQgAIAGBJQAABDAgoAYEhAAQAMCSgAgCEBBQAwJKAAAIYEFADAkIACABgSUAAAQwIKAGBIQAEADAkoAIAhAQUAMCSgAACGBBQAwJCAAgAYElAAAEMCCgBgSEABAAwJKACAIQEFADAkoAAAhgQUAMCQgAIAGBJQAABDWwqoqjq3qm6qqj+rqjuq6per6vlV9eWqunPxet5ODwsAsAq2egXqd5L8YXe/IslrktyR5Nokt3b3y5LculgHADjjHTegqupvJvkHSW5Iku7+aXc/kOTKJPsWh+1LctXOjAgAsFq2cgXqRUk2k/znqvpGVf1uVT0vye7uvm9xzP1Jdu/UkAAAq2QrAbUryd9N8p+6+3VJHsqTbtd1dyfpo725qq6pqo2q2tjc3DzZeQEAlm4rAXVPknu6+2uL9ZtyJKgOVdUFSbJ4PXy0N3f39d293t3ra2tr2zEzAMBSHTeguvv+JH9ZVZcuNl2R5DtJbkmyd7Ftb5Kbd2RCAIAVs2uLx/3LJL9XVc9McneS38iR+Lqxqq5OciDJO3ZmRACA1bKlgOru25OsH2XXFds6DQDAacCTyAEAhgQUAMCQgAIAGBJQAABDAgoAYEhAAQAMCSgAgCEBBQAwJKAAAIYEFADAkIACABgSUAAAQwIKAGBIQAEADAkoAIAhAQUAMCSgAACGBBQAwJCAAgAYElAAAEMCCgBgSEABAAwJKACAIQEFADAkoAAAhgQUAMCQgAIAGBJQAABDAgoAYEhAAQAMCSgAgCEBBQAwJKAAAIYEFADAkIACABgSUAAAQwIKAGBIQAEADAkoAIAhAQUAMCSgAACGdm3loKran+Svkjya5JHuXq+q5yf5XJI9SfYneUd3/2hnxgQAWB2TK1D/sLtf293ri/Vrk9za3S9LcutiHQDgjHcyt/CuTLJvsbwvyVUnPQ0AwGlgqwHVSb5UVbdV1TWLbbu7+77F8v1Jdm/7dAAAK2hL34FK8ve7+2BV/a0kX66qP3vizu7uquqjvXERXNckycUXX3xSwwIArIItXYHq7oOL18NJvpDk9UkOVdUFSbJ4PXyM917f3evdvb62trY9UwMALNFxA6qqnldV5zy+nOQfJflWkluS7F0ctjfJzTs1JADAKtnKLbzdSb5QVY8f/1+6+w+r6k+S3FhVVyc5kOQdOzcmAMDqOG5AdffdSV5zlO0/SHLFTgwFALDKPIkcAGBIQAEADAkoAIAhAQUAMCSgAACGBBQAwJCAAgAYElAAAEMCCgBgSEABAAwJKACAIQEFADAkoAAAhgQUAMDQrmUPAKymL33pS7nhhhuWPcaWvfOd71z2CE/pGc94Rj75yU/mvPPOW/YowDYQUMBRffWrX01V5a1vfeuyRzmuG2+8MW9729uWPcZTet/73pd77rlHQMEZQkABx/TqV7965a/sJKt/9SlJPvKRjyx7BGAb+Q4UAMCQgAIAGBJQAABDAgoAYEhAAQAMCSgAgCEBBQAwJKAAAIYEFADAkIACABgSUAAAQwIKAGBIQAEADAkoAIAhAQUAMCSgAACGBBQAwJCAAgAYElAAAEMCCgBgSEABAAwJKACAIQEFADAkoAAAhrYcUFX19Kr6RlX9/mL9RVX1taq6q6o+V1XP3LkxAQBWx+QK1G8mueMJ6x9P8onufmmSHyW5ejsHAwBYVVsKqKq6KMk/TvK7i/VK8sYkNy0O2Zfkqh2YDwBg5Wz1CtR/SPJvkzy2WH9Bkge6+5HF+j1JLtze0QAAVtNxA6qq/kmSw91924mcoKquqaqNqtrY3Nw8kR8BALBStnIF6g1JfrWq9if5bI7cuvudJOdW1a7FMRclOXi0N3f39d293t3ra2tr2zAyAMByHTeguvvfdfdF3b0nybuS/I/u/qdJvpLk7YvD9ia5ecemBABYISfzHKj3J3lvVd2VI9+JumF7RgIAWG27jn/Iz3T3V5N8dbF8d5LXb/9IAACrzZPIAQCGBBQAwJCAAgAYElAAAEMCCgBgSEABAAwJKACAIQEFADAkoAAAhgQUAMCQgAIAGBJQAABDAgoAYEhAAQAMCSgAgCEBBQAwJKAAAIYEFADAkIACABgSUAAAQwIKAGBIQAHH9OCDD+bhhx9e9hinvQcffDA//elPlz0GsI12LXsAYDVddtll+eAHP5jrrrsuu3fvzp49e7Jnz55ccsklP7d88cUX51nPetayx12qBx54IPv378/+/ftz4MCBX1j+yU9+kpe85CVZW1tb9qjANqnuPmUnW19f742NjVN2PuDkPfzwwzl48OAvRMHjrwcPHswLXvCCYwbWJZdckuc85znL/hgnrLvzwx/+8Jiff//+/XnssceO+fn37NmT888/P1W17I8CDFXVbd29ftR9Ago4GY8++mjuvffeX4iK/fv35/bbb88PfvCD7N69+69j4kMf+lBe+cpXLnvsp/TpT386N910019/joceeiiXXnppXvGKV/xcGD3+et555wkkOAM9VUC5hQeckO7O97///WNelTlw4ECqKq9+9at/7mrUKz93+bJHP65fT/Lr68nVu9+e3bt358CBA/nud7+bH//4xzl06FDuv//+n3t9/PM997nPXfbowCniChRwVN2dQ4cOHfN7PQcOHMizn/3so96yevz13HPPXfbH2DaPPvpo7r///mPeyvve976Xc8455yn/e5xzzjnL/hjAgFt4wNjHPvaxfPSjH82ll176CyHw+LIg+JnHHnsshw8fPmpcHThwIHfddVfuuOOOvPjFL172qMAWuYUHjD344IN5//vfnw984APLHuW08LSnPS0vfOEL88IXvjCXX/6Ltylf9apX5aGHHlrCZMBO8BwoAIAhAQUAMCSgAACGBBQAwJCAAgAYElAAAEMCCgBgSEABAAwJKACAIQEFADAkoAAAhgQUAMDQcQOqqp5dVf+rqv53VX27qj682P6iqvpaVd1VVZ+rqmfu/LgAAMu3lStQ/y/JG7v7NUlem+QtVXV5ko8n+UR3vzTJj5JcvWNTAgCskOMGVB/xfxarz1j86yRvTHLTYvu+JFftxIAAAKtmS9+B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\n",
      "text/plain": [
       "<Figure size 720x576 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(10,8))\n",
    "p = plt.boxplot(data['free sulfur dioxide'].values,whis=3.0,notch=True) ##画出箱线图\n",
    "outlier1 = p['fliers'][0].get_ydata() ##fliers为异常值的标签\n",
    "plt.show()\n",
    "mean1 = data['free sulfur dioxide'].quantile(q=0.25)#下四分位差\n",
    "mean2 =data['free sulfur dioxide'].quantile(q=0.75)#上四分位差\n",
    "mean3 = mean2-mean1#中位差\n",
    "topnum2 = mean2+1.5*mean3\n",
    "bottomnum2 = mean2-1.5*mean3\n",
    "print(topnum2)\n",
    "print('数据异常值个数为：',len(outlier1))\n",
    "print('数据异常值的最大值为：',max(outlier1))\n",
    "print('数据异常值的最小值为：',min(outlier1))\n",
    "replace_value1=data['free sulfur dioxide'][data['free sulfur dioxide']>topnum2].min()\n",
    "data.loc[data['free sulfur dioxide']>topnum2,'free sulfur dioxide']=replace_value1\n",
    "plt.figure(figsize=(10,8))\n",
    "p = plt.boxplot(data['free sulfur dioxide'].values,whis=3.0,notch=True) ##画出箱线图\n",
    "outlier1 = p['fliers'][0].get_ydata() ##fliers为异常值的标签\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 720x576 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "255.5\n",
      "数据异常值个数为： 2\n",
      "数据异常值的最大值为： 440.0\n",
      "数据异常值的最小值为： 366.5\n"
     ]
    },
    {
     "data": {
      "image/png": "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kldccUUuv/zyXHDBBdN+C0CDqnpgjLF4tsecsQLa/PSnP83Kysq6t4suuiiXX375GbeD//Kp5POfmvZbeE37kvzFfHLoF7+d1dXVl28/+tGPsrKykgsuuOCst7m5uczNzWV+fj5vepOPtsJOJqyAc/KLX/wit99+e5544olXXfJaXV3NwsLCGWdqFhYW8p73vOflS4B79uzJxRdffJZn/h+v+3s5X4dfcX91dTWnTp161Zm573znO2fcf/bZZ7N79+5Xnc264YYbsn///qm8F6CXsALOyWOPPZbPfe5zufXWW/Pud7/7jEB429velqqa9oivu7m5uSwsLGRhYeE193vuuedy8uTJM2L0yJEjeeaZZ3Lbbbe9TtMCW0lYAeds165dufXWW6c9xrZz4YUX5qqrrspVV1318tpzzz2X5eXlKU4FdHKxHwCgibACAGgirAAAmggrAIAmwgoAoImwAgBoIqwAAJoIKwCAJsIKAKCJsAIAaCKsAACaCCsAgCbCCgCgibACAGgirAAAmggrAIAmwgoAoImwAgBoIqwAAJoIKwCAJsIKAKCJsAIAaCKsAACaCCsAgCbCCgCgibACAGgirAAAmggrAIAmwgoAoImwAgBoIqwAAJoIKwCAJsIKAKCJsAIAaCKsAACaCCsAgCbCCgCgydy0BwC2l6NHj+bRRx/NZZddNu1RdoSf/exnueWWW6Y9BtBEWAHn5EMf+lAeffTRXHrppdMeZV27du3K008/Pe0x1nXJJZdMewSgibACzslb3vKWvOtd75r2GBvmzBrwevIZKwCAJsIKAKCJsAIAaCKsAACaCCsAgCbCCgCgibACAGiyblhV1R1VdbqqHlqz9o6qureqHp38vXSyXlX151V1tKq+V1W/uZXDAwDMko2csfpqkutfsfbZJPeNMa5Jct/kfpJ8JMk1k9uhJF/uGRMAYPatG1ZjjG8neeYVyweS3DnZvjPJx9as/9V40T8kuaSq9jTNCgAw0873M1a7xxgnJtsnk+yebC8keWrNfscma69SVYeqaqmqllZWVs5zDACA2bHpD6+PMUaScR7HHR5jLI4xFufn5zc7BgDA1J1vWJ166RLf5O/pyfrxJHvX7HflZA0AYMc737A6kuTGyfaNSb65Zv13J98OfF+SZ9dcMgQA2NHm1tuhqr6e5ANJdlXVsSR/nORPktxVVTcleSLJxye735Pko0mOJvmPJL+3BTMDAMykdcNqjPGJX/LQB8+y70hy82aHAgDYjvzyOgBAE2EFANBEWAEANBFWAABNhBUAQBNhBQDQRFgBADQRVgAATYQVAEATYQUA0ERYAQA0EVYAAE2EFQBAE2EFANBEWAEANBFWAABNhBUAQBNhBQDQRFgBADQRVgAATYQVAEATYQUA0ERYAQA0EVYAAE2EFQBAE2EFANBEWAEANBFWAABNhBUAQBNhBQDQRFgBADQRVgAATYQVAEATYQUA0ERYAQA0EVYAAE2EFQBAE2EFANBEWAEANBFWAABNhBUAQBNhBQDQRFgBADQRVgAATYQVAEATYQUA0ERYAQA0EVYAAE2EFQBAE2EFANBEWAEANBFWAABNhBUAQBNhBQDQRFgBADQRVgAATYQVAEATYQUA0ERYAQA0EVYAAE2EFQBAE2EFANBEWAEANBFWAABNhBUAQBNhBQDQRFgBADQRVgAATYQVAEATYQUA0ERYAQA0mdvMwVX1eJKfJHk+yeoYY7Gq3pHkfyfZl+TxJB8fY/zb5sYEAJh9HWes/vsY49oxxuLk/meT3DfGuCbJfZP7AAA73lZcCjyQ5M7J9p1JPrYFrwEAMHM2G1Yjyf+tqgeq6tBkbfcY48Rk+2SS3Wc7sKoOVdVSVS2trKxscgwAgOnb1Geskvy3Mcbxqro8yb1V9S9rHxxjjKoaZztwjHE4yeEkWVxcPOs+AADbyabOWI0xjk/+nk7yt0nem+RUVe1Jksnf05sdEgBgOzjvsKqqi6rq4pe2k3w4yUNJjiS5cbLbjUm+udkhAQC2g81cCtyd5G+r6qXn+V9jjG9V1T8luauqbkryRJKPb35MAIDZd95hNcb41yS/fpb1HyX54GaGAgDYjvzyOgBAE2EFANBEWAEANBFWAABNhBUAQBNhBQDQRFgBADQRVgAATYQVAEATYQUA0ERYAQA0EVYAAE2EFQBAE2EFANBEWAEANBFWAABNhBUAQBNhBQDQRFgBADQRVgAATYQVAEATYQUA0ERYAQA0EVYAAE2EFQBAE2EFANBEWAEANBFWAABNhBUAQBNhBQDQRFgBADQRVgAATYQVAEATYQUA0ERYAQA0EVYAAE2EFQBAE2EFANBEWAEANBFWAABNhBUAQBNhBQDQRFgBADQRVgAATYQVAEATYQUA0ERYAQA0EVYAAE2EFQBAE2EFANBEWAEANBFWAABNhBUAQBNhBQDQRFgBADQRVgAATYQVAEATYQUA0ERYAQA0EVYAAE3mpj0AQJJU1bZ53jFG+3MCO4OwAmaCWAF2ApcCAQCaCCsAgCbCCgCgibACAGgirAAAmggrAIAmwgoAoImwAgBoIqwAAJpsWVhV1fVV9YOqOlpVn92q1wEAmBVbElZV9eYkf5HkI0n2J/lEVe3fitcCAJgVW3XG6r1Jjo4x/nWM8fMk30hyYIteCwBgJmxVWC0keWrN/WOTtZdV1aGqWqqqpZWVlS0aAwDg9TO1D6+PMQ6PMRbHGIvz8/PTGgMAoM1WhdXxJHvX3L9ysgYAsGNtVVj9U5JrqurqqnpLkoNJjmzRawEAzIS5rXjSMcZqVX06yf9J8uYkd4wxHt6K1wIAmBVbElZJMsa4J8k9W/X8AACzpsYY054hVbWS5IlpzwHsOLuSPD3tIYAd56oxxlm/eTcTYQWwFapqaYyxOO05gDcO/1cgAEATYQUA0ERYATvZ4WkPALyx+IwVAEATZ6wAAJoIK2DHqao7qup0VT007VmANxZhBexEX01y/bSHAN54hBWw44wxvp3kmWnPAbzxCCsAgCbCCgCgibACAGgirAAAmggrYMepqq8n+U6S/1pVx6rqpmnPBLwx+OV1AIAmzlgBADQRVgAATYQVAEATYQUA0ERYAQA0EVYAAE2EFQBAE2EFANDk/wMcRMfy2kg7VgAAAABJRU5ErkJggg==\n",
      "text/plain": [
       "<Figure size 720x576 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(10,8))\n",
    "p = plt.boxplot(data['total sulfur dioxide'].values,whis=3.0,notch=True) ##画出箱线图\n",
    "outlier1 = p['fliers'][0].get_ydata() ##fliers为异常值的标签\n",
    "plt.show()\n",
    "mean1 = data['total sulfur dioxide'].quantile(q=0.25)#下四分位差\n",
    "mean2 =data['total sulfur dioxide'].quantile(q=0.75)#上四分位差\n",
    "mean3 = mean2-mean1#中位差\n",
    "topnum2 = mean2+1.5*mean3\n",
    "bottomnum2 = mean2-1.5*mean3\n",
    "print(topnum2)\n",
    "print('数据异常值个数为：',len(outlier1))\n",
    "print('数据异常值的最大值为：',max(outlier1))\n",
    "print('数据异常值的最小值为：',min(outlier1))\n",
    "replace_value1=data['total sulfur dioxide'][data['total sulfur dioxide']>topnum2].min()\n",
    "data.loc[data['total sulfur dioxide']>topnum2,'total sulfur dioxide']=replace_value1\n",
    "plt.figure(figsize=(10,8))\n",
    "p = plt.boxplot(data['total sulfur dioxide'].values,whis=3.0,notch=True) ##画出箱线图\n",
    "outlier1 = p['fliers'][0].get_ydata() ##fliers为异常值的标签\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 720x576 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "1.0026662499999999\n",
      "数据异常值个数为： 3\n",
      "数据异常值的最大值为： 1.03898\n",
      "数据异常值的最小值为： 1.0103\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x576 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(10,8))\n",
    "p = plt.boxplot(data['density'].values,whis=3.0,notch=True) ##画出箱线图\n",
    "outlier1 = p['fliers'][0].get_ydata() ##fliers为异常值的标签\n",
    "plt.show()\n",
    "mean1 = data['density'].quantile(q=0.25)#下四分位差\n",
    "mean2 =data['density'].quantile(q=0.75)#上四分位差\n",
    "mean3 = mean2-mean1#中位差\n",
    "topnum2 = mean2+1.5*mean3\n",
    "bottomnum2 = mean2-1.5*mean3\n",
    "print(topnum2)\n",
    "print('数据异常值个数为：',len(outlier1))\n",
    "print('数据异常值的最大值为：',max(outlier1))\n",
    "print('数据异常值的最小值为：',min(outlier1))\n",
    "replace_value1=data['density'][data['density']>topnum2].min()\n",
    "data.loc[data['density']>topnum2,'density']=replace_value1\n",
    "plt.figure(figsize=(10,8))\n",
    "p = plt.boxplot(data['density'].values,whis=3.0,notch=True) ##画出箱线图\n",
    "outlier1 = p['fliers'][0].get_ydata() ##fliers为异常值的标签\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 720x576 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "3.5649999999999995\n",
      "数据异常值个数为： 0\n"
     ]
    },
    {
     "ename": "ValueError",
     "evalue": "max() arg is an empty sequence",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mValueError\u001b[0m                                Traceback (most recent call last)",
      "\u001b[1;32m<ipython-input-35-c4688f1accf4>\u001b[0m in \u001b[0;36m<module>\u001b[1;34m\u001b[0m\n\u001b[0;32m     10\u001b[0m \u001b[0mprint\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mtopnum2\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m     11\u001b[0m \u001b[0mprint\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;34m'数据异常值个数为：'\u001b[0m\u001b[1;33m,\u001b[0m\u001b[0mlen\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0moutlier1\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m---> 12\u001b[1;33m \u001b[0mprint\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;34m'数据异常值的最大值为：'\u001b[0m\u001b[1;33m,\u001b[0m\u001b[0mmax\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0moutlier1\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m     13\u001b[0m \u001b[0mprint\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;34m'数据异常值的最小值为：'\u001b[0m\u001b[1;33m,\u001b[0m\u001b[0mmin\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0moutlier1\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m     14\u001b[0m \u001b[0mreplace_value1\u001b[0m\u001b[1;33m=\u001b[0m\u001b[0mdata\u001b[0m\u001b[1;33m[\u001b[0m\u001b[1;34m'pH'\u001b[0m\u001b[1;33m]\u001b[0m\u001b[1;33m[\u001b[0m\u001b[0mdata\u001b[0m\u001b[1;33m[\u001b[0m\u001b[1;34m'pH'\u001b[0m\u001b[1;33m]\u001b[0m\u001b[1;33m>\u001b[0m\u001b[0mtopnum2\u001b[0m\u001b[1;33m]\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mmin\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n",
      "\u001b[1;31mValueError\u001b[0m: max() arg is an empty sequence"
     ]
    }
   ],
   "source": [
    "plt.figure(figsize=(10,8))\n",
    "p = plt.boxplot(data['pH'].values,whis=3.0,notch=True) ##画出箱线图\n",
    "outlier1 = p['fliers'][0].get_ydata() ##fliers为异常值的标签\n",
    "plt.show()\n",
    "mean1 = data['pH'].quantile(q=0.25)#下四分位差\n",
    "mean2 =data['pH'].quantile(q=0.75)#上四分位差\n",
    "mean3 = mean2-mean1#中位差\n",
    "topnum2 = mean2+1.5*mean3\n",
    "bottomnum2 = mean2-1.5*mean3\n",
    "print(topnum2)\n",
    "print('数据异常值个数为：',len(outlier1))\n",
    "print('数据异常值的最大值为：',max(outlier1))\n",
    "print('数据异常值的最小值为：',min(outlier1))\n",
    "replace_value1=data['pH'][data['pH']>topnum2].min()\n",
    "data.loc[data['pH']>topnum2,'pH']=replace_value1\n",
    "plt.figure(figsize=(10,8))\n",
    "p = plt.boxplot(data['pH'].values,whis=3.0,notch=True) ##画出箱线图\n",
    "outlier1 = p['fliers'][0].get_ydata() ##fliers为异常值的标签\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAAlMAAAHSCAYAAADIRU4IAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjMuMywgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy/Il7ecAAAACXBIWXMAAAsTAAALEwEAmpwYAAAUIElEQVR4nO3db6im9Z3f8c8348hAEl0nTkmJf0bETUYPIdmehgUHXHELRoJ5UDAZWEpxshLKDIUuxZQpodoY1i4UUrGlbpXQYk+0+6CR7RQjy2mWCdp6hrTBUSyDVjM2xNkZWdRgneivD2aUcTzOOeZ7xuv8eb1g8L7+zH19jw+G97nu37lOjTECAMBv5mNTDwAAsJaJKQCABjEFANAgpgAAGsQUAECDmAIAaDhvqgtffPHFY/v27VNdHgBg2Q4ePPhXY4xtix2bLKa2b9+ehYWFqS4PALBsVfXCBx3zMR8AQIOYAgBoEFMAAA1iCgCgQUwBADSIKQCABjEFANAgpgAAGsQUAECDmAIAaBBTAAANYgoAoEFMAQA0iCkAgAYxBQDQIKaAdWFubi4zMzPZtGlTZmZmMjc3N/VIwAZx3tQDAHTNzc1l3759uf/++7Nz584cOHAgu3fvTpLs2rVr4umA9a7GGJNceHZ2diwsLExybWB9mZmZyT333JPrr7/+3X3z8/PZu3dvnnrqqQknA9aLqjo4xphd9JiYAta6TZs25Y033sjmzZvf3XfixIls2bIlb7311oSTAevF2WLKmilgzduxY0cOHDjwnn0HDhzIjh07JpoI2EjEFLDm7du3L7t37878/HxOnDiR+fn57N69O/v27Zt6NGADsAAdWPPeWWS+d+/ePPPMM9mxY0fuuusui8+Bj4Q1UwAAS7BmCgDgHBFTwLrgoZ3AVKyZAtY8D+0EpmTNFLDmeWgncK55aCewrnloJ3CuWYAOrGse2glMSUwBa56HdgJTsgAdWPM8tBOYkjVTAABLsGYKAOAcEVMAAA1iCgCgQUwBADSIKQCABjEFANAgpgAAGsQUAECDmAIAaBBTAAANYgoAoEFMAQA0iCkAgAYxBQDQIKYAABrEFLAuzM3NZWZmJps2bcrMzEzm5uamHgnYIM6begCArrm5uezbty/3339/du7cmQMHDmT37t1Jkl27dk08HbDe1RhjkgvPzs6OhYWFSa4NrC8zMzO55557cv3117+7b35+Pnv37s1TTz014WTAelFVB8cYs4seE1PAWrdp06a88cYb2bx587v7Tpw4kS1btuStt96acDJgvThbTC25ZqqqHqiql6tq0W/v6qR/VVWHq+pnVfU73YEBPowdO3bkjjvueM+aqTvuuCM7duyYejRgA1jOAvTvJ7nxLMe/nOSqU39uS/Jv+mMBLN/111+fu+++O7feemteffXV3Hrrrbn77rvf87EfwLmyZEyNMf4yyfGznPLVJP9+nPREkt+qqr+5UgMCLGV+fj633357HnjggXzyk5/MAw88kNtvvz3z8/NTjwZsAMtaM1VV25P8+RhjZpFjf57kj8cYB05t/0WS28cY71sQVVW35eTdq1x22WV/64UXXuhNDxBrpoBzr7VmaiWNMe4bY8yOMWa3bdv2UV4aWMd27NiRAwcOvGffgQMHrJkCPhIr8Zypl5Jcetr2Jaf2AXwk9u3bl6997Wv5+Mc/nhdffDGXXXZZXn/99Xzve9+bejRgA1iJO1OPJPl7p36q73eT/PUY4xcr8L4AH9pUj3sBNq7lPBphLsnjST5bVUeqandVfbOqvnnqlP1JnktyOMmfJvkH52xagEXcddddeeihh/L888/n7bffzvPPP5+HHnood91119SjARuAh3YCa54F6MC5tmoWoAOcCxagA1Pyi46BNW/fvn254YYb3rNeqqry4IMPTjgVsFG4MwWseXv27MkY492P+TZv3pwxRvbs2TPxZMBGIKaANe/48eO55ppr8uabb2aMkTfffDPXXHNNjh8/2y9vAFgZYgpYF/bv33/WbYBzRUwB68JNN9101m2Ac0VMAWve1q1bc+jQoczMzOTFF1/MzMxMDh06lK1bt049GrAB+Gk+YM07duxYPvWpT+XQoUO5/PLLk5wMrGPHjk08GbARiClgMlV1zt77+PHjK/r+fk0N8EHEFDCZcxEoVSV8gI+UNVMAAA1iCgCgQUwBADSIKQCABjEFANAgpgAAGsQUAECDmAIAaBBTAAANYgoAoEFMAQA0iCkAgAYxBQDQIKYAABrEFABAg5gCAGgQUwAADWIKAKBBTAEANIgpAIAGMQUA0CCmAAAaxBQAQIOYAgBoEFMAAA1iCgCgQUwBADSIKQCABjEFANAgpgAAGsQUAECDmAIAaBBTAAANYgoAoEFMAQA0iCkAgAYxBQDQ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\n",
      "text/plain": [
       "<Figure size 720x576 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0.7600000000000001\n",
      "数据异常值个数为： 11\n",
      "数据异常值的最大值为： 1.08\n",
      "数据异常值的最小值为： 0.98\n"
     ]
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 720x576 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(10,8))\n",
    "p = plt.boxplot(data['sulphates'].values,whis=3.0,notch=True) ##画出箱线图\n",
    "outlier1 = p['fliers'][0].get_ydata() ##fliers为异常值的标签\n",
    "plt.show()\n",
    "mean1 = data['sulphates'].quantile(q=0.25)#下四分位差\n",
    "mean2 =data['sulphates'].quantile(q=0.75)#上四分位差\n",
    "mean3 = mean2-mean1#中位差\n",
    "topnum2 = mean2+1.5*mean3\n",
    "bottomnum2 = mean2-1.5*mean3\n",
    "print(topnum2)\n",
    "print('数据异常值个数为：',len(outlier1))\n",
    "print('数据异常值的最大值为：',max(outlier1))\n",
    "print('数据异常值的最小值为：',min(outlier1))\n",
    "replace_value1=data['sulphates'][data['sulphates']>topnum2].min()\n",
    "data.loc[data['sulphates']>topnum2,'sulphates']=replace_value1\n",
    "plt.figure(figsize=(10,8))\n",
    "p = plt.boxplot(data['sulphates'].values,whis=3.0,notch=True) ##画出箱线图\n",
    "outlier1 = p['fliers'][0].get_ydata() ##fliers为异常值的标签\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 720x576 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "14.25\n",
      "数据异常值个数为： 0\n"
     ]
    },
    {
     "ename": "ValueError",
     "evalue": "max() arg is an empty sequence",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mValueError\u001b[0m                                Traceback (most recent call last)",
      "\u001b[1;32m<ipython-input-37-4e4469a91db6>\u001b[0m in \u001b[0;36m<module>\u001b[1;34m\u001b[0m\n\u001b[0;32m     10\u001b[0m \u001b[0mprint\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mtopnum2\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m     11\u001b[0m \u001b[0mprint\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;34m'数据异常值个数为：'\u001b[0m\u001b[1;33m,\u001b[0m\u001b[0mlen\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0moutlier1\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m---> 12\u001b[1;33m \u001b[0mprint\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;34m'数据异常值的最大值为：'\u001b[0m\u001b[1;33m,\u001b[0m\u001b[0mmax\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0moutlier1\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m     13\u001b[0m \u001b[0mprint\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;34m'数据异常值的最小值为：'\u001b[0m\u001b[1;33m,\u001b[0m\u001b[0mmin\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0moutlier1\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m     14\u001b[0m \u001b[0mreplace_value1\u001b[0m\u001b[1;33m=\u001b[0m\u001b[0mdata\u001b[0m\u001b[1;33m[\u001b[0m\u001b[1;34m'alcohol'\u001b[0m\u001b[1;33m]\u001b[0m\u001b[1;33m[\u001b[0m\u001b[0mdata\u001b[0m\u001b[1;33m[\u001b[0m\u001b[1;34m'alcohol'\u001b[0m\u001b[1;33m]\u001b[0m\u001b[1;33m>\u001b[0m\u001b[0mtopnum2\u001b[0m\u001b[1;33m]\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mmin\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n",
      "\u001b[1;31mValueError\u001b[0m: max() arg is an empty sequence"
     ]
    }
   ],
   "source": [
    "plt.figure(figsize=(10,8))\n",
    "p = plt.boxplot(data['alcohol'].values,whis=3.0,notch=True) ##画出箱线图\n",
    "outlier1 = p['fliers'][0].get_ydata() ##fliers为异常值的标签\n",
    "plt.show()\n",
    "mean1 = data['alcohol'].quantile(q=0.25)#下四分位差\n",
    "mean2 =data['alcohol'].quantile(q=0.75)#上四分位差\n",
    "mean3 = mean2-mean1#中位差\n",
    "topnum2 = mean2+1.5*mean3\n",
    "bottomnum2 = mean2-1.5*mean3\n",
    "print(topnum2)\n",
    "print('数据异常值个数为：',len(outlier1))\n",
    "print('数据异常值的最大值为：',max(outlier1))\n",
    "print('数据异常值的最小值为：',min(outlier1))\n",
    "replace_value1=data['alcohol'][data['alcohol']>topnum2].min()\n",
    "data.loc[data['alcohol']>topnum2,'alcohol']=replace_value1\n",
    "plt.figure(figsize=(10,8))\n",
    "p = plt.boxplot(data['alcohol'].values,whis=3.0,notch=True) ##画出箱线图\n",
    "outlier1 = p['fliers'][0].get_ydata() ##fliers为异常值的标签\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 4898 entries, 0 to 4897\n",
      "Data columns (total 12 columns):\n",
      " #   Column                Non-Null Count  Dtype  \n",
      "---  ------                --------------  -----  \n",
      " 0   fixed acidity         4898 non-null   float64\n",
      " 1   volatile acidity      4898 non-null   float64\n",
      " 2   citric acid           4898 non-null   float64\n",
      " 3   residual sugar        4898 non-null   float64\n",
      " 4   chlorides             4898 non-null   float64\n",
      " 5   free sulfur dioxide   4898 non-null   float64\n",
      " 6   total sulfur dioxide  4898 non-null   float64\n",
      " 7   density               4898 non-null   float64\n",
      " 8   pH                    4898 non-null   float64\n",
      " 9   sulphates             4898 non-null   float64\n",
      " 10  alcohol               4898 non-null   float64\n",
      " 11  quality               4898 non-null   int64  \n",
      "dtypes: float64(11), int64(1)\n",
      "memory usage: 459.3 KB\n"
     ]
    }
   ],
   "source": [
    "data.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "metadata": {},
   "outputs": [],
   "source": [
    "#数据标准化（min-max）\n",
    "def MinMaxScale(data):\n",
    "    data=(data-data.min())/(data.max()-data.min())\n",
    "    return data\n",
    "for i in data.columns:\n",
    "    data[i]=MinMaxScale(data[i])\n",
    "    data.to_csv('WINE.csv')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 52,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>fixed acidity</th>\n",
       "      <th>volatile acidity</th>\n",
       "      <th>citric acid</th>\n",
       "      <th>residual sugar</th>\n",
       "      <th>chlorides</th>\n",
       "      <th>free sulfur dioxide</th>\n",
       "      <th>total sulfur dioxide</th>\n",
       "      <th>density</th>\n",
       "      <th>pH</th>\n",
       "      <th>sulphates</th>\n",
       "      <th>alcohol</th>\n",
       "      <th>quality</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0.627451</td>\n",
       "      <td>0.463415</td>\n",
       "      <td>0.620690</td>\n",
       "      <td>0.913636</td>\n",
       "      <td>0.571429</td>\n",
       "      <td>0.544304</td>\n",
       "      <td>0.651822</td>\n",
       "      <td>0.876894</td>\n",
       "      <td>0.254545</td>\n",
       "      <td>0.418182</td>\n",
       "      <td>0.129032</td>\n",
       "      <td>0.5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0.490196</td>\n",
       "      <td>0.536585</td>\n",
       "      <td>0.586207</td>\n",
       "      <td>0.045455</td>\n",
       "      <td>0.634921</td>\n",
       "      <td>0.151899</td>\n",
       "      <td>0.497976</td>\n",
       "      <td>0.434975</td>\n",
       "      <td>0.527273</td>\n",
       "      <td>0.490909</td>\n",
       "      <td>0.241935</td>\n",
       "      <td>0.5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0.843137</td>\n",
       "      <td>0.487805</td>\n",
       "      <td>0.689655</td>\n",
       "      <td>0.286364</td>\n",
       "      <td>0.650794</td>\n",
       "      <td>0.354430</td>\n",
       "      <td>0.356275</td>\n",
       "      <td>0.504419</td>\n",
       "      <td>0.490909</td>\n",
       "      <td>0.400000</td>\n",
       "      <td>0.338710</td>\n",
       "      <td>0.5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>0.666667</td>\n",
       "      <td>0.365854</td>\n",
       "      <td>0.551724</td>\n",
       "      <td>0.359091</td>\n",
       "      <td>0.777778</td>\n",
       "      <td>0.569620</td>\n",
       "      <td>0.716599</td>\n",
       "      <td>0.535985</td>\n",
       "      <td>0.427273</td>\n",
       "      <td>0.327273</td>\n",
       "      <td>0.306452</td>\n",
       "      <td>0.5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0.666667</td>\n",
       "      <td>0.365854</td>\n",
       "      <td>0.551724</td>\n",
       "      <td>0.359091</td>\n",
       "      <td>0.777778</td>\n",
       "      <td>0.569620</td>\n",
       "      <td>0.716599</td>\n",
       "      <td>0.535985</td>\n",
       "      <td>0.427273</td>\n",
       "      <td>0.327273</td>\n",
       "      <td>0.306452</td>\n",
       "      <td>0.5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>0.843137</td>\n",
       "      <td>0.487805</td>\n",
       "      <td>0.689655</td>\n",
       "      <td>0.286364</td>\n",
       "      <td>0.650794</td>\n",
       "      <td>0.354430</td>\n",
       "      <td>0.356275</td>\n",
       "      <td>0.504419</td>\n",
       "      <td>0.490909</td>\n",
       "      <td>0.400000</td>\n",
       "      <td>0.338710</td>\n",
       "      <td>0.5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>0.470588</td>\n",
       "      <td>0.585366</td>\n",
       "      <td>0.275862</td>\n",
       "      <td>0.290909</td>\n",
       "      <td>0.571429</td>\n",
       "      <td>0.354430</td>\n",
       "      <td>0.514170</td>\n",
       "      <td>0.491793</td>\n",
       "      <td>0.418182</td>\n",
       "      <td>0.454545</td>\n",
       "      <td>0.258065</td>\n",
       "      <td>0.5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>0.627451</td>\n",
       "      <td>0.463415</td>\n",
       "      <td>0.620690</td>\n",
       "      <td>0.913636</td>\n",
       "      <td>0.571429</td>\n",
       "      <td>0.544304</td>\n",
       "      <td>0.651822</td>\n",
       "      <td>0.876894</td>\n",
       "      <td>0.254545</td>\n",
       "      <td>0.418182</td>\n",
       "      <td>0.129032</td>\n",
       "      <td>0.5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>0.490196</td>\n",
       "      <td>0.536585</td>\n",
       "      <td>0.586207</td>\n",
       "      <td>0.045455</td>\n",
       "      <td>0.634921</td>\n",
       "      <td>0.151899</td>\n",
       "      <td>0.497976</td>\n",
       "      <td>0.434975</td>\n",
       "      <td>0.527273</td>\n",
       "      <td>0.490909</td>\n",
       "      <td>0.241935</td>\n",
       "      <td>0.5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>0.843137</td>\n",
       "      <td>0.341463</td>\n",
       "      <td>0.741379</td>\n",
       "      <td>0.040909</td>\n",
       "      <td>0.555556</td>\n",
       "      <td>0.329114</td>\n",
       "      <td>0.485830</td>\n",
       "      <td>0.422348</td>\n",
       "      <td>0.454545</td>\n",
       "      <td>0.418182</td>\n",
       "      <td>0.483871</td>\n",
       "      <td>0.5</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   fixed acidity  volatile acidity  citric acid  residual sugar  chlorides  \\\n",
       "0       0.627451          0.463415     0.620690        0.913636   0.571429   \n",
       "1       0.490196          0.536585     0.586207        0.045455   0.634921   \n",
       "2       0.843137          0.487805     0.689655        0.286364   0.650794   \n",
       "3       0.666667          0.365854     0.551724        0.359091   0.777778   \n",
       "4       0.666667          0.365854     0.551724        0.359091   0.777778   \n",
       "5       0.843137          0.487805     0.689655        0.286364   0.650794   \n",
       "6       0.470588          0.585366     0.275862        0.290909   0.571429   \n",
       "7       0.627451          0.463415     0.620690        0.913636   0.571429   \n",
       "8       0.490196          0.536585     0.586207        0.045455   0.634921   \n",
       "9       0.843137          0.341463     0.741379        0.040909   0.555556   \n",
       "\n",
       "   free sulfur dioxide  total sulfur dioxide   density        pH  sulphates  \\\n",
       "0             0.544304              0.651822  0.876894  0.254545   0.418182   \n",
       "1             0.151899              0.497976  0.434975  0.527273   0.490909   \n",
       "2             0.354430              0.356275  0.504419  0.490909   0.400000   \n",
       "3             0.569620              0.716599  0.535985  0.427273   0.327273   \n",
       "4             0.569620              0.716599  0.535985  0.427273   0.327273   \n",
       "5             0.354430              0.356275  0.504419  0.490909   0.400000   \n",
       "6             0.354430              0.514170  0.491793  0.418182   0.454545   \n",
       "7             0.544304              0.651822  0.876894  0.254545   0.418182   \n",
       "8             0.151899              0.497976  0.434975  0.527273   0.490909   \n",
       "9             0.329114              0.485830  0.422348  0.454545   0.418182   \n",
       "\n",
       "    alcohol  quality  \n",
       "0  0.129032      0.5  \n",
       "1  0.241935      0.5  \n",
       "2  0.338710      0.5  \n",
       "3  0.306452      0.5  \n",
       "4  0.306452      0.5  \n",
       "5  0.338710      0.5  \n",
       "6  0.258065      0.5  \n",
       "7  0.129032      0.5  \n",
       "8  0.241935      0.5  \n",
       "9  0.483871      0.5  "
      ]
     },
     "execution_count": 52,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "datab = pd.read_csv('WINE.csv')  # DataFrame\n",
    "datab.head(10)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 67,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "scores: [ 10.7764565   53.1898753    3.24956795  21.88584092  87.60846142\n",
      "  18.96722543  43.84066027 112.75609274  10.10328912   3.14108324\n",
      " 229.7347723 ]\n",
      "selected index: [ 0  1  2  3  4  5  6  7  8 10]\n",
      "after transform: [[0.62745098 0.46341463 0.62068965 ... 0.87689394 0.25454545 0.12903226]\n",
      " [0.49019608 0.53658537 0.5862069  ... 0.43497475 0.52727273 0.24193548]\n",
      " [0.84313726 0.48780488 0.68965517 ... 0.50441919 0.49090909 0.33870968]\n",
      " ...\n",
      " [0.52941176 0.3902439  0.32758621 ... 0.34280303 0.24545454 0.22580645]\n",
      " [0.33333333 0.51219512 0.51724138 ... 0.09974748 0.56363636 0.77419355]\n",
      " [0.43137255 0.31707317 0.65517241 ... 0.14520202 0.49090909 0.61290323]]\n"
     ]
    }
   ],
   "source": [
    "#使用单变量统计检验方法对特征进行选择\n",
    "from sklearn.feature_selection import SelectKBest,f_classif\n",
    "X= datab.iloc[:,0:11] #截取特征\n",
    "y=datab.iloc[:,11] #截取标签\n",
    "\n",
    "sel=SelectKBest(score_func=f_classif,k=10) #引入以方差分析为原理的特征选择函数，并设置选择k个特征\n",
    "sel.fit(X,y) #计算统计指标，这里一定用到y\n",
    "print('scores:',sel.scores_)\n",
    "print('selected index:',sel.get_support(True))\n",
    "print('after transform:',sel.transform(X))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 68,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([0.49019608, 0.53658537, 0.5862069 , 0.04545454, 0.63492063,\n",
       "       0.49797571, 0.43497475, 0.52727273, 0.49090909, 0.24193548])"
      ]
     },
     "execution_count": 68,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#卡方检验法\n",
    "from sklearn.feature_selection import SelectKBest\n",
    "from sklearn.feature_selection import chi2\n",
    "#选择K个最好的特征，返回选择特征后的数据\n",
    "x=SelectKBest(chi2, k=10).fit_transform(X, y.astype('int'))\n",
    "x[1,:]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 69,
   "metadata": {},
   "outputs": [],
   "source": [
    "target_data=pd.concat([y,X.iloc[:,sel.get_support(True)]],axis=1)\n",
    "target_data.to_csv('NEW_wine2.csv')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 76,
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "from sklearn.model_selection import train_test_split # 划分数据集的模块\n",
    "\n",
    "#data = pd.read_csv('NEW_wine.csv', encoding='utf-8')\n",
    "#data = pd.read_csv('NEW_wine1.csv', encoding='utf-8')\n",
    "data = pd.read_csv('NEW_wine2.csv', encoding='utf-8')\n",
    "\n",
    "X= data.iloc[:,2:]\n",
    "y= data.iloc[:,1]   #目标\n",
    "\n",
    "#radnom_state参数是固定一种划分方式，保证重复运行程序时，结果一样。\n",
    "Xtrain, Xtest, Ytrain, Ytest = train_test_split( X, y, test_size=0.3, random_state=123456)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 77,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "5 4\n"
     ]
    }
   ],
   "source": [
    "#网格搜索法\n",
    "from sklearn.tree import DecisionTreeRegressor\n",
    "from sklearn.metrics import make_scorer,accuracy_score\n",
    "from sklearn.model_selection import GridSearchCV\n",
    "parameters={\n",
    "            'max_depth':[3,4,5,6,7,8,9],\n",
    "            'min_samples_leaf': [4,6,8,10,15,20,25,30]\n",
    "            }\n",
    "\n",
    "#采用neg_mean_absolute_error评价决策回归树\n",
    "from sklearn.model_selection import GridSearchCV\n",
    "\n",
    "DTR=DecisionTreeRegressor(random_state = 0)\n",
    "grid_search=GridSearchCV(DTR,parameters,scoring='neg_mean_absolute_error',cv=5)\n",
    "grid_search.fit(X,y) #训练\n",
    "\n",
    "best_para= grid_search.best_params_  #获取最优的训练参数\n",
    "print(best_para['max_depth'], best_para['min_samples_leaf'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 89,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Unnamed: 0              0\n",
      "quality                 0\n",
      "fixed acidity           0\n",
      "volatile acidity        0\n",
      "citric acid             0\n",
      "residual sugar          0\n",
      "chlorides               0\n",
      "free sulfur dioxide     0\n",
      "total sulfur dioxide    0\n",
      "density                 0\n",
      "pH                      0\n",
      "alcohol                 0\n",
      "dtype: int64\n",
      "决策树回归模型(max_depth=5)的测试误差MAE: 97.44475007227584\n",
      "决策树回归模型(max_depth=5)的测试误差MSE: 15.71030002299727\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 648x504 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "D:\\Anaconda\\envs\\tensorflow2xxx\\lib\\site-packages\\matplotlib\\backends\\backend_agg.py:238: RuntimeWarning: Glyph 8722 missing from current font.\n",
      "  font.set_text(s, 0.0, flags=flags)\n",
      "D:\\Anaconda\\envs\\tensorflow2xxx\\lib\\site-packages\\matplotlib\\backends\\backend_agg.py:201: RuntimeWarning: Glyph 8722 missing from current font.\n",
      "  font.set_text(s, 0, flags=flags)\n"
     ]
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 648x504 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "#使用决策回归树模型\n",
    "# -*- coding: utf-8 -*-\n",
    "\"\"\"\n",
    "Created on Mon Dec  7 09:52:24 2020\n",
    "\n",
    "@author: wanglei\n",
    "\"\"\"\n",
    "\n",
    "\n",
    "#决策回归树模型\n",
    "\n",
    "\n",
    "from sklearn.tree import DecisionTreeRegressor\n",
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "import pandas as pd\n",
    "from sklearn.model_selection import train_test_split\n",
    "from sklearn.metrics import mean_absolute_error, mean_squared_error\n",
    "\n",
    "# 1. 准备数据\n",
    "#data = pd.read_csv('NEW_wine.csv', encoding='utf-8')\n",
    "#data = pd.read_csv('NEW_wine1.csv', encoding='utf-8')\n",
    "data= pd.read_csv('NEW_wine2.csv', encoding='utf-8')\n",
    "X = data.iloc[:,2:]\n",
    "Y = data.iloc[:,1]\n",
    "print(data.isnull().sum())\n",
    "\n",
    "#划分数据集\n",
    "X_train,X_test,Y_train,Y_test = train_test_split(X,Y,test_size=0.3,random_state=12345)\n",
    "\n",
    "# 2. 模型的构建和训练\n",
    "tree_model = DecisionTreeRegressor(max_depth=5,min_samples_leaf=4)\n",
    "tree_model.fit(X_train, Y_train)\n",
    "\n",
    "# 3. 预测和性能评价\n",
    "Y_pred = tree_model.predict(X_test)\n",
    "\n",
    "#用MAE做性能评价：\n",
    "mae= mean_absolute_error(Y_test, Y_pred)\n",
    "mse= mean_squared_error(Y_test, Y_pred)\n",
    "print(\"决策树回归模型(max_depth=5)的测试误差MAE:\",mae*1000)\n",
    "print(\"决策树回归模型(max_depth=5)的测试误差MSE:\",mse*1000)\n",
    "\n",
    "\n",
    "#4. 绘图展示模型的预测结果\n",
    "\n",
    "# 4.1 预测结果比较图\n",
    "plt.figure(figsize=[9,7])\n",
    "plt.rcParams['font.sans-serif']=['SimHei']\n",
    "t = np.arange(len(X_test))\n",
    "plt.plot(t, Y_test, 'r-', linewidth=2, label=r'真实数据')\n",
    "plt.plot(t, Y_pred, 'g-', linewidth=2, label=r'回归模型的预测结果')\n",
    "plt.legend(loc='upper left')\n",
    "plt.title(r'决策树回归预测白葡萄酒的质量', fontsize=18)\n",
    "plt.grid(b=True, ls=':')\n",
    "\n",
    "#4.2  测试误差的分布直方图\n",
    "plt.figure(figsize=[9,7])\n",
    "plt.rcParams['font.sans-serif']=['SimHei']\n",
    "error = Y_pred - Y_test\n",
    "n,bins,patches = plt.hist(error, bins = 50) # 分成50块 查看每个error区间内对应的数量\n",
    "plt.xlabel(r\"预测误差\")\n",
    "plt.ylabel(r\"数量\")\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 125,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Model: \"sequential_38\"\n",
      "_________________________________________________________________\n",
      "Layer (type)                 Output Shape              Param #   \n",
      "=================================================================\n",
      "dense_112 (Dense)            (None, 64)                704       \n",
      "_________________________________________________________________\n",
      "dense_113 (Dense)            (None, 16)                1040      \n",
      "_________________________________________________________________\n",
      "dense_114 (Dense)            (None, 1)                 17        \n",
      "=================================================================\n",
      "Total params: 1,761\n",
      "Trainable params: 1,761\n",
      "Non-trainable params: 0\n",
      "_________________________________________________________________\n",
      "Train on 2742 samples, validate on 686 samples\n",
      "Epoch 1/200\n",
      " - 0s - loss: 0.0237 - mae: 0.1155 - val_loss: 0.0358 - val_mae: 0.1538\n",
      "Epoch 2/200\n",
      " - 0s - loss: 0.0179 - mae: 0.1042 - val_loss: 0.0204 - val_mae: 0.1105\n",
      "Epoch 3/200\n",
      " - 0s - loss: 0.0165 - mae: 0.0999 - val_loss: 0.0221 - val_mae: 0.1146\n",
      "Epoch 4/200\n",
      " - 0s - loss: 0.0161 - mae: 0.0985 - val_loss: 0.0183 - val_mae: 0.1048\n",
      "Epoch 5/200\n",
      " - 0s - loss: 0.0158 - mae: 0.0977 - val_loss: 0.0178 - val_mae: 0.1026\n",
      "Epoch 6/200\n",
      " - 0s - loss: 0.0154 - mae: 0.0966 - val_loss: 0.0165 - val_mae: 0.0988\n",
      "Epoch 7/200\n",
      " - 0s - loss: 0.0154 - mae: 0.0964 - val_loss: 0.0163 - val_mae: 0.0987\n",
      "Epoch 8/200\n",
      " - 0s - loss: 0.0145 - mae: 0.0943 - val_loss: 0.0165 - val_mae: 0.0994\n",
      "Epoch 9/200\n",
      " - 0s - loss: 0.0145 - mae: 0.0947 - val_loss: 0.0160 - val_mae: 0.0979\n",
      "Epoch 10/200\n",
      " - 0s - loss: 0.0144 - mae: 0.0937 - val_loss: 0.0165 - val_mae: 0.0998\n",
      "Epoch 11/200\n",
      " - 0s - loss: 0.0147 - mae: 0.0949 - val_loss: 0.0166 - val_mae: 0.1000\n",
      "Epoch 12/200\n",
      " - 0s - loss: 0.0141 - mae: 0.0926 - val_loss: 0.0162 - val_mae: 0.0991\n",
      "Epoch 13/200\n",
      " - 0s - loss: 0.0139 - mae: 0.0929 - val_loss: 0.0162 - val_mae: 0.0978\n",
      "Epoch 14/200\n",
      " - 0s - loss: 0.0142 - mae: 0.0932 - val_loss: 0.0165 - val_mae: 0.0993\n",
      "Epoch 15/200\n",
      " - 0s - loss: 0.0140 - mae: 0.0926 - val_loss: 0.0167 - val_mae: 0.0997\n",
      "Epoch 16/200\n",
      " - 0s - loss: 0.0137 - mae: 0.0919 - val_loss: 0.0178 - val_mae: 0.1032\n",
      "Epoch 17/200\n",
      " - 0s - loss: 0.0137 - mae: 0.0918 - val_loss: 0.0176 - val_mae: 0.1016\n",
      "Epoch 18/200\n",
      " - 0s - loss: 0.0136 - mae: 0.0914 - val_loss: 0.0164 - val_mae: 0.0991\n",
      "Epoch 19/200\n",
      " - 0s - loss: 0.0134 - mae: 0.0912 - val_loss: 0.0195 - val_mae: 0.1078\n",
      "Epoch 20/200\n",
      " - 0s - loss: 0.0135 - mae: 0.0910 - val_loss: 0.0201 - val_mae: 0.1095\n",
      "Epoch 21/200\n",
      " - 0s - loss: 0.0134 - mae: 0.0901 - val_loss: 0.0164 - val_mae: 0.0978\n",
      "Epoch 22/200\n",
      " - 0s - loss: 0.0134 - mae: 0.0905 - val_loss: 0.0159 - val_mae: 0.0979\n",
      "Epoch 23/200\n",
      " - 0s - loss: 0.0132 - mae: 0.0903 - val_loss: 0.0158 - val_mae: 0.0972\n",
      "Epoch 24/200\n",
      " - 0s - loss: 0.0133 - mae: 0.0908 - val_loss: 0.0156 - val_mae: 0.0969\n",
      "Epoch 25/200\n",
      " - 0s - loss: 0.0132 - mae: 0.0896 - val_loss: 0.0172 - val_mae: 0.1007\n",
      "Epoch 26/200\n",
      " - 0s - loss: 0.0130 - mae: 0.0889 - val_loss: 0.0186 - val_mae: 0.1045\n",
      "Epoch 27/200\n",
      " - 0s - loss: 0.0133 - mae: 0.0898 - val_loss: 0.0158 - val_mae: 0.0966\n",
      "Epoch 28/200\n",
      " - 0s - loss: 0.0132 - mae: 0.0893 - val_loss: 0.0154 - val_mae: 0.0963\n",
      "Epoch 29/200\n",
      " - 0s - loss: 0.0131 - mae: 0.0898 - val_loss: 0.0165 - val_mae: 0.0986\n",
      "Epoch 30/200\n",
      " - 0s - loss: 0.0129 - mae: 0.0886 - val_loss: 0.0176 - val_mae: 0.1010\n",
      "Epoch 31/200\n",
      " - 0s - loss: 0.0131 - mae: 0.0890 - val_loss: 0.0177 - val_mae: 0.1036\n",
      "Epoch 32/200\n",
      " - 0s - loss: 0.0127 - mae: 0.0884 - val_loss: 0.0163 - val_mae: 0.0993\n",
      "Epoch 33/200\n",
      " - 0s - loss: 0.0130 - mae: 0.0892 - val_loss: 0.0162 - val_mae: 0.0980\n",
      "Epoch 34/200\n",
      " - 0s - loss: 0.0128 - mae: 0.0889 - val_loss: 0.0160 - val_mae: 0.0975\n",
      "Epoch 35/200\n",
      " - 0s - loss: 0.0127 - mae: 0.0881 - val_loss: 0.0160 - val_mae: 0.0986\n",
      "Epoch 36/200\n",
      " - 0s - loss: 0.0128 - mae: 0.0887 - val_loss: 0.0159 - val_mae: 0.0979\n",
      "Epoch 37/200\n",
      " - 0s - loss: 0.0128 - mae: 0.0885 - val_loss: 0.0178 - val_mae: 0.1030\n",
      "Epoch 38/200\n",
      " - 0s - loss: 0.0126 - mae: 0.0883 - val_loss: 0.0159 - val_mae: 0.0972\n",
      "Epoch 39/200\n",
      " - 0s - loss: 0.0128 - mae: 0.0885 - val_loss: 0.0160 - val_mae: 0.0972\n",
      "Epoch 40/200\n",
      " - 0s - loss: 0.0126 - mae: 0.0881 - val_loss: 0.0161 - val_mae: 0.0991\n",
      "Epoch 41/200\n",
      " - 0s - loss: 0.0126 - mae: 0.0879 - val_loss: 0.0161 - val_mae: 0.0972\n",
      "Epoch 42/200\n",
      " - 0s - loss: 0.0125 - mae: 0.0876 - val_loss: 0.0159 - val_mae: 0.0977\n",
      "Epoch 43/200\n",
      " - 0s - loss: 0.0125 - mae: 0.0874 - val_loss: 0.0158 - val_mae: 0.0969\n",
      "Epoch 44/200\n",
      " - 0s - loss: 0.0123 - mae: 0.0869 - val_loss: 0.0158 - val_mae: 0.0980\n",
      "Epoch 45/200\n",
      " - 0s - loss: 0.0124 - mae: 0.0867 - val_loss: 0.0161 - val_mae: 0.0996\n",
      "Epoch 46/200\n",
      " - 0s - loss: 0.0124 - mae: 0.0878 - val_loss: 0.0165 - val_mae: 0.0987\n",
      "Epoch 47/200\n",
      " - 0s - loss: 0.0124 - mae: 0.0868 - val_loss: 0.0154 - val_mae: 0.0963\n",
      "Epoch 48/200\n",
      " - 0s - loss: 0.0125 - mae: 0.0870 - val_loss: 0.0167 - val_mae: 0.0992\n",
      "Epoch 49/200\n",
      " - 0s - loss: 0.0124 - mae: 0.0871 - val_loss: 0.0161 - val_mae: 0.0989\n",
      "Epoch 50/200\n",
      " - 0s - loss: 0.0122 - mae: 0.0865 - val_loss: 0.0157 - val_mae: 0.0966\n",
      "Epoch 51/200\n",
      " - 0s - loss: 0.0123 - mae: 0.0866 - val_loss: 0.0159 - val_mae: 0.0979\n",
      "Epoch 52/200\n",
      " - 0s - loss: 0.0123 - mae: 0.0866 - val_loss: 0.0197 - val_mae: 0.1068\n",
      "Epoch 53/200\n",
      " - 0s - loss: 0.0122 - mae: 0.0868 - val_loss: 0.0183 - val_mae: 0.1026\n",
      "Epoch 54/200\n",
      " - 0s - loss: 0.0123 - mae: 0.0865 - val_loss: 0.0180 - val_mae: 0.1022\n",
      "Epoch 55/200\n",
      " - 0s - loss: 0.0122 - mae: 0.0863 - val_loss: 0.0170 - val_mae: 0.0995\n",
      "Epoch 56/200\n",
      " - 0s - loss: 0.0121 - mae: 0.0858 - val_loss: 0.0176 - val_mae: 0.1012\n",
      "Epoch 57/200\n",
      " - 0s - loss: 0.0121 - mae: 0.0856 - val_loss: 0.0162 - val_mae: 0.0977\n",
      "Epoch 58/200\n",
      " - 0s - loss: 0.0120 - mae: 0.0859 - val_loss: 0.0162 - val_mae: 0.0981\n",
      "Epoch 59/200\n",
      " - 0s - loss: 0.0121 - mae: 0.0860 - val_loss: 0.0162 - val_mae: 0.0974\n",
      "Epoch 60/200\n",
      " - 0s - loss: 0.0119 - mae: 0.0854 - val_loss: 0.0164 - val_mae: 0.0984\n",
      "Epoch 61/200\n",
      " - 0s - loss: 0.0119 - mae: 0.0848 - val_loss: 0.0164 - val_mae: 0.0983\n",
      "Epoch 62/200\n",
      " - 0s - loss: 0.0121 - mae: 0.0860 - val_loss: 0.0169 - val_mae: 0.0999\n",
      "Epoch 63/200\n",
      " - 0s - loss: 0.0119 - mae: 0.0855 - val_loss: 0.0158 - val_mae: 0.0969\n",
      "Epoch 64/200\n",
      " - 0s - loss: 0.0118 - mae: 0.0850 - val_loss: 0.0184 - val_mae: 0.1029\n",
      "Epoch 65/200\n",
      " - 0s - loss: 0.0119 - mae: 0.0846 - val_loss: 0.0158 - val_mae: 0.0965\n",
      "Epoch 66/200\n",
      " - 0s - loss: 0.0117 - mae: 0.0845 - val_loss: 0.0162 - val_mae: 0.0970\n",
      "Epoch 67/200\n",
      " - 0s - loss: 0.0118 - mae: 0.0848 - val_loss: 0.0158 - val_mae: 0.0977\n",
      "Epoch 68/200\n",
      " - 0s - loss: 0.0118 - mae: 0.0851 - val_loss: 0.0157 - val_mae: 0.0967\n",
      "Epoch 69/200\n",
      " - 0s - loss: 0.0117 - mae: 0.0843 - val_loss: 0.0184 - val_mae: 0.1035\n",
      "Epoch 70/200\n",
      " - 0s - loss: 0.0116 - mae: 0.0841 - val_loss: 0.0180 - val_mae: 0.1056\n",
      "Epoch 71/200\n",
      " - 0s - loss: 0.0116 - mae: 0.0848 - val_loss: 0.0174 - val_mae: 0.1027\n",
      "Epoch 72/200\n",
      " - 0s - loss: 0.0115 - mae: 0.0836 - val_loss: 0.0157 - val_mae: 0.0965\n",
      "Epoch 73/200\n",
      " - 0s - loss: 0.0116 - mae: 0.0844 - val_loss: 0.0181 - val_mae: 0.1024\n",
      "Epoch 74/200\n",
      " - 0s - loss: 0.0117 - mae: 0.0841 - val_loss: 0.0165 - val_mae: 0.0984\n",
      "Epoch 75/200\n",
      " - 0s - loss: 0.0114 - mae: 0.0831 - val_loss: 0.0157 - val_mae: 0.0972\n",
      "Epoch 76/200\n",
      " - 0s - loss: 0.0115 - mae: 0.0837 - val_loss: 0.0161 - val_mae: 0.0973\n",
      "Epoch 77/200\n",
      " - 0s - loss: 0.0117 - mae: 0.0836 - val_loss: 0.0162 - val_mae: 0.0975\n",
      "Epoch 78/200\n",
      " - 0s - loss: 0.0116 - mae: 0.0845 - val_loss: 0.0170 - val_mae: 0.0996\n",
      "Epoch 79/200\n",
      " - 0s - loss: 0.0117 - mae: 0.0847 - val_loss: 0.0161 - val_mae: 0.0979\n",
      "Epoch 80/200\n",
      " - 0s - loss: 0.0113 - mae: 0.0832 - val_loss: 0.0173 - val_mae: 0.1011\n",
      "Epoch 81/200\n",
      " - 0s - loss: 0.0115 - mae: 0.0839 - val_loss: 0.0179 - val_mae: 0.1019\n",
      "Epoch 82/200\n",
      " - 0s - loss: 0.0115 - mae: 0.0835 - val_loss: 0.0159 - val_mae: 0.0971\n",
      "Epoch 83/200\n",
      " - 0s - loss: 0.0114 - mae: 0.0827 - val_loss: 0.0180 - val_mae: 0.1025\n",
      "Epoch 84/200\n",
      " - 0s - loss: 0.0115 - mae: 0.0839 - val_loss: 0.0166 - val_mae: 0.0987\n",
      "Epoch 85/200\n",
      " - 0s - loss: 0.0112 - mae: 0.0825 - val_loss: 0.0163 - val_mae: 0.0983\n",
      "Epoch 86/200\n",
      " - 0s - loss: 0.0113 - mae: 0.0834 - val_loss: 0.0167 - val_mae: 0.0988\n",
      "Epoch 87/200\n",
      " - 0s - loss: 0.0113 - mae: 0.0830 - val_loss: 0.0162 - val_mae: 0.0979\n",
      "Epoch 88/200\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " - 0s - loss: 0.0112 - mae: 0.0826 - val_loss: 0.0170 - val_mae: 0.1012\n",
      "Epoch 89/200\n",
      " - 0s - loss: 0.0111 - mae: 0.0826 - val_loss: 0.0177 - val_mae: 0.1016\n",
      "Epoch 90/200\n",
      " - 0s - loss: 0.0111 - mae: 0.0826 - val_loss: 0.0170 - val_mae: 0.1007\n",
      "Epoch 91/200\n",
      " - 0s - loss: 0.0113 - mae: 0.0836 - val_loss: 0.0162 - val_mae: 0.0977\n",
      "Epoch 92/200\n",
      " - 0s - loss: 0.0113 - mae: 0.0829 - val_loss: 0.0172 - val_mae: 0.1009\n",
      "Epoch 93/200\n",
      " - 0s - loss: 0.0111 - mae: 0.0828 - val_loss: 0.0160 - val_mae: 0.0968\n",
      "Epoch 94/200\n",
      " - 0s - loss: 0.0110 - mae: 0.0824 - val_loss: 0.0159 - val_mae: 0.0976\n",
      "Epoch 95/200\n",
      " - 0s - loss: 0.0109 - mae: 0.0815 - val_loss: 0.0152 - val_mae: 0.0946\n",
      "Epoch 96/200\n",
      " - 0s - loss: 0.0110 - mae: 0.0821 - val_loss: 0.0159 - val_mae: 0.0974\n",
      "Epoch 97/200\n",
      " - 0s - loss: 0.0110 - mae: 0.0819 - val_loss: 0.0176 - val_mae: 0.1004\n",
      "Epoch 98/200\n",
      " - 0s - loss: 0.0109 - mae: 0.0822 - val_loss: 0.0164 - val_mae: 0.0977\n",
      "Epoch 99/200\n",
      " - 0s - loss: 0.0108 - mae: 0.0811 - val_loss: 0.0165 - val_mae: 0.0984\n",
      "Epoch 100/200\n",
      " - 0s - loss: 0.0109 - mae: 0.0819 - val_loss: 0.0158 - val_mae: 0.0969\n",
      "Epoch 101/200\n",
      " - 0s - loss: 0.0110 - mae: 0.0821 - val_loss: 0.0160 - val_mae: 0.0969\n",
      "Epoch 102/200\n",
      " - 0s - loss: 0.0109 - mae: 0.0812 - val_loss: 0.0161 - val_mae: 0.0990\n",
      "Epoch 103/200\n",
      " - 0s - loss: 0.0110 - mae: 0.0821 - val_loss: 0.0168 - val_mae: 0.0987\n",
      "Epoch 104/200\n",
      " - 0s - loss: 0.0108 - mae: 0.0812 - val_loss: 0.0158 - val_mae: 0.0961\n",
      "Epoch 105/200\n",
      " - 0s - loss: 0.0109 - mae: 0.0814 - val_loss: 0.0168 - val_mae: 0.0981\n",
      "Epoch 106/200\n",
      " - 0s - loss: 0.0108 - mae: 0.0806 - val_loss: 0.0159 - val_mae: 0.0965\n",
      "Epoch 107/200\n",
      " - 0s - loss: 0.0108 - mae: 0.0810 - val_loss: 0.0158 - val_mae: 0.0970\n",
      "Epoch 108/200\n",
      " - 0s - loss: 0.0107 - mae: 0.0807 - val_loss: 0.0164 - val_mae: 0.0983\n",
      "Epoch 109/200\n",
      " - 0s - loss: 0.0106 - mae: 0.0803 - val_loss: 0.0161 - val_mae: 0.0977\n",
      "Epoch 110/200\n",
      " - 0s - loss: 0.0107 - mae: 0.0809 - val_loss: 0.0156 - val_mae: 0.0974\n",
      "Epoch 111/200\n",
      " - 0s - loss: 0.0108 - mae: 0.0809 - val_loss: 0.0162 - val_mae: 0.0981\n",
      "Epoch 112/200\n",
      " - 0s - loss: 0.0106 - mae: 0.0802 - val_loss: 0.0159 - val_mae: 0.0963\n",
      "Epoch 113/200\n",
      " - 0s - loss: 0.0107 - mae: 0.0808 - val_loss: 0.0166 - val_mae: 0.0978\n",
      "Epoch 114/200\n",
      " - 0s - loss: 0.0106 - mae: 0.0804 - val_loss: 0.0156 - val_mae: 0.0957\n",
      "Epoch 115/200\n",
      " - 0s - loss: 0.0105 - mae: 0.0797 - val_loss: 0.0159 - val_mae: 0.0962\n",
      "Epoch 116/200\n",
      " - 0s - loss: 0.0105 - mae: 0.0803 - val_loss: 0.0173 - val_mae: 0.1005\n",
      "Epoch 117/200\n",
      " - 0s - loss: 0.0106 - mae: 0.0800 - val_loss: 0.0153 - val_mae: 0.0945\n",
      "Epoch 118/200\n",
      " - 0s - loss: 0.0104 - mae: 0.0795 - val_loss: 0.0163 - val_mae: 0.0976\n",
      "Epoch 119/200\n",
      " - 0s - loss: 0.0105 - mae: 0.0802 - val_loss: 0.0161 - val_mae: 0.0980\n",
      "Epoch 120/200\n",
      " - 0s - loss: 0.0106 - mae: 0.0805 - val_loss: 0.0177 - val_mae: 0.1025\n",
      "Epoch 121/200\n",
      " - 0s - loss: 0.0105 - mae: 0.0800 - val_loss: 0.0155 - val_mae: 0.0963\n",
      "Epoch 122/200\n",
      " - 0s - loss: 0.0105 - mae: 0.0794 - val_loss: 0.0171 - val_mae: 0.0997\n",
      "Epoch 123/200\n",
      " - 0s - loss: 0.0105 - mae: 0.0799 - val_loss: 0.0168 - val_mae: 0.0988\n",
      "Epoch 124/200\n",
      " - 0s - loss: 0.0104 - mae: 0.0794 - val_loss: 0.0181 - val_mae: 0.1037\n",
      "Epoch 125/200\n",
      " - 0s - loss: 0.0104 - mae: 0.0796 - val_loss: 0.0163 - val_mae: 0.0972\n",
      "Epoch 126/200\n",
      " - 0s - loss: 0.0105 - mae: 0.0805 - val_loss: 0.0165 - val_mae: 0.0990\n",
      "Epoch 127/200\n",
      " - 0s - loss: 0.0104 - mae: 0.0797 - val_loss: 0.0162 - val_mae: 0.0971\n",
      "Epoch 128/200\n",
      " - 0s - loss: 0.0104 - mae: 0.0795 - val_loss: 0.0167 - val_mae: 0.1011\n",
      "Epoch 129/200\n",
      " - 0s - loss: 0.0102 - mae: 0.0788 - val_loss: 0.0175 - val_mae: 0.1003\n",
      "Epoch 130/200\n",
      " - 0s - loss: 0.0104 - mae: 0.0797 - val_loss: 0.0173 - val_mae: 0.1003\n",
      "Epoch 131/200\n",
      " - 0s - loss: 0.0103 - mae: 0.0791 - val_loss: 0.0160 - val_mae: 0.0973\n",
      "Epoch 132/200\n",
      " - 0s - loss: 0.0104 - mae: 0.0795 - val_loss: 0.0161 - val_mae: 0.0979\n",
      "Epoch 133/200\n",
      " - 0s - loss: 0.0104 - mae: 0.0798 - val_loss: 0.0167 - val_mae: 0.0982\n",
      "Epoch 134/200\n",
      " - 0s - loss: 0.0103 - mae: 0.0792 - val_loss: 0.0178 - val_mae: 0.1007\n",
      "Epoch 135/200\n",
      " - 0s - loss: 0.0103 - mae: 0.0788 - val_loss: 0.0156 - val_mae: 0.0955\n",
      "Epoch 136/200\n",
      " - 0s - loss: 0.0103 - mae: 0.0787 - val_loss: 0.0170 - val_mae: 0.0983\n",
      "Epoch 137/200\n",
      " - 0s - loss: 0.0102 - mae: 0.0786 - val_loss: 0.0162 - val_mae: 0.0976\n",
      "Epoch 138/200\n",
      " - 0s - loss: 0.0102 - mae: 0.0783 - val_loss: 0.0175 - val_mae: 0.1004\n",
      "Epoch 139/200\n",
      " - 0s - loss: 0.0102 - mae: 0.0785 - val_loss: 0.0168 - val_mae: 0.0984\n",
      "Epoch 140/200\n",
      " - 0s - loss: 0.0101 - mae: 0.0785 - val_loss: 0.0164 - val_mae: 0.0974\n",
      "Epoch 141/200\n",
      " - 0s - loss: 0.0103 - mae: 0.0790 - val_loss: 0.0154 - val_mae: 0.0952\n",
      "Epoch 142/200\n",
      " - 0s - loss: 0.0101 - mae: 0.0780 - val_loss: 0.0158 - val_mae: 0.0954\n",
      "Epoch 143/200\n",
      " - 0s - loss: 0.0102 - mae: 0.0786 - val_loss: 0.0179 - val_mae: 0.1028\n",
      "Epoch 144/200\n",
      " - 0s - loss: 0.0101 - mae: 0.0784 - val_loss: 0.0165 - val_mae: 0.0968\n",
      "Epoch 145/200\n",
      " - 0s - loss: 0.0102 - mae: 0.0781 - val_loss: 0.0159 - val_mae: 0.0959\n",
      "Epoch 146/200\n",
      " - 0s - loss: 0.0102 - mae: 0.0784 - val_loss: 0.0171 - val_mae: 0.1000\n",
      "Epoch 147/200\n",
      " - 0s - loss: 0.0102 - mae: 0.0787 - val_loss: 0.0162 - val_mae: 0.0960\n",
      "Epoch 148/200\n",
      " - 0s - loss: 0.0100 - mae: 0.0784 - val_loss: 0.0166 - val_mae: 0.0977\n",
      "Epoch 149/200\n",
      " - 0s - loss: 0.0101 - mae: 0.0783 - val_loss: 0.0176 - val_mae: 0.1016\n",
      "Epoch 150/200\n",
      " - 0s - loss: 0.0102 - mae: 0.0786 - val_loss: 0.0168 - val_mae: 0.0990\n",
      "Epoch 151/200\n",
      " - 0s - loss: 0.0102 - mae: 0.0786 - val_loss: 0.0167 - val_mae: 0.0996\n",
      "Epoch 152/200\n",
      " - 0s - loss: 0.0099 - mae: 0.0775 - val_loss: 0.0158 - val_mae: 0.0963\n",
      "Epoch 153/200\n",
      " - 0s - loss: 0.0101 - mae: 0.0782 - val_loss: 0.0157 - val_mae: 0.0971\n",
      "Epoch 154/200\n",
      " - 0s - loss: 0.0099 - mae: 0.0773 - val_loss: 0.0163 - val_mae: 0.0977\n",
      "Epoch 155/200\n",
      " - 0s - loss: 0.0099 - mae: 0.0778 - val_loss: 0.0164 - val_mae: 0.0976\n",
      "Epoch 156/200\n",
      " - 0s - loss: 0.0098 - mae: 0.0770 - val_loss: 0.0173 - val_mae: 0.1006\n",
      "Epoch 157/200\n",
      " - 0s - loss: 0.0100 - mae: 0.0779 - val_loss: 0.0191 - val_mae: 0.1039\n",
      "Epoch 158/200\n",
      " - 0s - loss: 0.0100 - mae: 0.0777 - val_loss: 0.0164 - val_mae: 0.0977\n",
      "Epoch 159/200\n",
      " - 0s - loss: 0.0097 - mae: 0.0773 - val_loss: 0.0169 - val_mae: 0.0995\n",
      "Epoch 160/200\n",
      " - 0s - loss: 0.0098 - mae: 0.0767 - val_loss: 0.0162 - val_mae: 0.0969\n",
      "Epoch 161/200\n",
      " - 0s - loss: 0.0098 - mae: 0.0780 - val_loss: 0.0158 - val_mae: 0.0962\n",
      "Epoch 162/200\n",
      " - 0s - loss: 0.0099 - mae: 0.0780 - val_loss: 0.0165 - val_mae: 0.0975\n",
      "Epoch 163/200\n",
      " - 0s - loss: 0.0099 - mae: 0.0773 - val_loss: 0.0170 - val_mae: 0.0991\n",
      "Epoch 164/200\n",
      " - 0s - loss: 0.0098 - mae: 0.0770 - val_loss: 0.0179 - val_mae: 0.1020\n",
      "Epoch 165/200\n",
      " - 0s - loss: 0.0099 - mae: 0.0773 - val_loss: 0.0171 - val_mae: 0.1010\n",
      "Epoch 166/200\n",
      " - 0s - loss: 0.0098 - mae: 0.0773 - val_loss: 0.0160 - val_mae: 0.0962\n",
      "Epoch 167/200\n",
      " - 0s - loss: 0.0098 - mae: 0.0773 - val_loss: 0.0184 - val_mae: 0.1024\n",
      "Epoch 168/200\n",
      " - 0s - loss: 0.0099 - mae: 0.0772 - val_loss: 0.0160 - val_mae: 0.0962\n",
      "Epoch 169/200\n",
      " - 0s - loss: 0.0099 - mae: 0.0772 - val_loss: 0.0158 - val_mae: 0.0947\n",
      "Epoch 170/200\n",
      " - 0s - loss: 0.0096 - mae: 0.0765 - val_loss: 0.0160 - val_mae: 0.0976\n",
      "Epoch 171/200\n",
      " - 0s - loss: 0.0097 - mae: 0.0771 - val_loss: 0.0174 - val_mae: 0.1009\n",
      "Epoch 172/200\n",
      " - 0s - loss: 0.0096 - mae: 0.0766 - val_loss: 0.0157 - val_mae: 0.0959\n",
      "Epoch 173/200\n",
      " - 0s - loss: 0.0098 - mae: 0.0770 - val_loss: 0.0157 - val_mae: 0.0967\n",
      "Epoch 174/200\n",
      " - 0s - loss: 0.0097 - mae: 0.0768 - val_loss: 0.0164 - val_mae: 0.0981\n",
      "Epoch 175/200\n",
      " - 0s - loss: 0.0098 - mae: 0.0768 - val_loss: 0.0159 - val_mae: 0.0975\n",
      "Epoch 176/200\n",
      " - 0s - loss: 0.0098 - mae: 0.0774 - val_loss: 0.0164 - val_mae: 0.0990\n",
      "Epoch 177/200\n",
      " - 0s - loss: 0.0098 - mae: 0.0770 - val_loss: 0.0157 - val_mae: 0.0963\n",
      "Epoch 178/200\n",
      " - 0s - loss: 0.0098 - mae: 0.0764 - val_loss: 0.0159 - val_mae: 0.0972\n",
      "Epoch 179/200\n",
      " - 0s - loss: 0.0097 - mae: 0.0767 - val_loss: 0.0175 - val_mae: 0.1026\n",
      "Epoch 180/200\n",
      " - 0s - loss: 0.0096 - mae: 0.0762 - val_loss: 0.0163 - val_mae: 0.0978\n",
      "Epoch 181/200\n",
      " - 0s - loss: 0.0097 - mae: 0.0763 - val_loss: 0.0156 - val_mae: 0.0951\n",
      "Epoch 182/200\n",
      " - 0s - loss: 0.0097 - mae: 0.0765 - val_loss: 0.0162 - val_mae: 0.0967\n",
      "Epoch 183/200\n",
      " - 0s - loss: 0.0095 - mae: 0.0760 - val_loss: 0.0168 - val_mae: 0.0986\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Epoch 184/200\n",
      " - 0s - loss: 0.0096 - mae: 0.0761 - val_loss: 0.0166 - val_mae: 0.0981\n",
      "Epoch 185/200\n",
      " - 0s - loss: 0.0097 - mae: 0.0769 - val_loss: 0.0166 - val_mae: 0.0983\n",
      "Epoch 186/200\n",
      " - 0s - loss: 0.0097 - mae: 0.0761 - val_loss: 0.0164 - val_mae: 0.0972\n",
      "Epoch 187/200\n",
      " - 0s - loss: 0.0097 - mae: 0.0764 - val_loss: 0.0179 - val_mae: 0.1019\n",
      "Epoch 188/200\n",
      " - 0s - loss: 0.0096 - mae: 0.0766 - val_loss: 0.0175 - val_mae: 0.1010\n",
      "Epoch 189/200\n",
      " - 0s - loss: 0.0096 - mae: 0.0760 - val_loss: 0.0161 - val_mae: 0.0960\n",
      "Epoch 190/200\n",
      " - 0s - loss: 0.0097 - mae: 0.0762 - val_loss: 0.0163 - val_mae: 0.0982\n",
      "Epoch 191/200\n",
      " - 0s - loss: 0.0096 - mae: 0.0763 - val_loss: 0.0169 - val_mae: 0.0991\n",
      "Epoch 192/200\n",
      " - 0s - loss: 0.0095 - mae: 0.0757 - val_loss: 0.0169 - val_mae: 0.0986\n",
      "Epoch 193/200\n",
      " - 0s - loss: 0.0096 - mae: 0.0767 - val_loss: 0.0159 - val_mae: 0.0970\n",
      "Epoch 194/200\n",
      " - 0s - loss: 0.0097 - mae: 0.0768 - val_loss: 0.0169 - val_mae: 0.1006\n",
      "Epoch 195/200\n",
      " - 0s - loss: 0.0095 - mae: 0.0762 - val_loss: 0.0158 - val_mae: 0.0954\n",
      "Epoch 196/200\n",
      " - 0s - loss: 0.0096 - mae: 0.0761 - val_loss: 0.0178 - val_mae: 0.1012\n",
      "Epoch 197/200\n",
      " - 0s - loss: 0.0096 - mae: 0.0755 - val_loss: 0.0180 - val_mae: 0.1036\n",
      "Epoch 198/200\n",
      " - 0s - loss: 0.0096 - mae: 0.0764 - val_loss: 0.0162 - val_mae: 0.0965\n",
      "Epoch 199/200\n",
      " - 0s - loss: 0.0096 - mae: 0.0770 - val_loss: 0.0171 - val_mae: 0.0995\n",
      "Epoch 200/200\n",
      " - 0s - loss: 0.0095 - mae: 0.0763 - val_loss: 0.0163 - val_mae: 0.0964\n",
      "1470/1470 [==============================] - 0s 11us/step\n",
      "\n",
      "Testing set Mean Abs Error:   93.80\n",
      "\n",
      "Testing set MSE:   14.79\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 648x504 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "D:\\Anaconda\\envs\\tensorflow2xxx\\lib\\site-packages\\matplotlib\\backends\\backend_agg.py:238: RuntimeWarning: Glyph 8722 missing from current font.\n",
      "  font.set_text(s, 0.0, flags=flags)\n",
      "D:\\Anaconda\\envs\\tensorflow2xxx\\lib\\site-packages\\matplotlib\\backends\\backend_agg.py:201: RuntimeWarning: Glyph 8722 missing from current font.\n",
      "  font.set_text(s, 0, flags=flags)\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 648x504 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# -*- coding: utf-8 -*-\n",
    "\"\"\"\n",
    "Created on Mon Dec  7 10:36:22 2020\n",
    "\n",
    "@author: wanglei\n",
    "\"\"\"\n",
    "\n",
    "#BPNN回归模型\n",
    "\n",
    "\n",
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "import pandas as pd\n",
    "from sklearn.model_selection import train_test_split\n",
    "from sklearn.metrics import mean_absolute_error,mean_squared_error\n",
    "from keras import models, layers\n",
    "from keras.optimizers import RMSprop\n",
    "\n",
    "\n",
    "#辅助函数\n",
    "def plot_history(history):\n",
    "    Dict = history.history\n",
    "    plt.figure()  #生成一副图像\n",
    "    plt.xlabel('Epoch')\n",
    "    plt.ylabel('Mean Abs Error [1000$]')\n",
    "    plt.plot(history.epoch, np.array(Dict['mae']),\n",
    "                label='Train_MAE')\n",
    "    plt.plot(history.epoch, np.array(Dict['val_mae']),\n",
    "                label='Val_MAE')\n",
    "    plt.legend()\n",
    "    plt.show()\n",
    "\n",
    "\n",
    "\n",
    "# 1. 准备数据\n",
    "#data = pd.read_csv('NEW_wine.csv', encoding='utf-8')\n",
    "#data = pd.read_csv('NEW_wine1.csv', encoding='utf-8')\n",
    "data = pd.read_csv('NEW_wine2.csv', encoding='utf-8')\n",
    "X = data.iloc[:,2:]\n",
    "Y = data.iloc[:,1]\n",
    "\n",
    "\n",
    "\n",
    "#划分数据集\n",
    "X_train,X_test,Y_train,Y_test = train_test_split(X,Y,test_size=0.3,random_state=12345)\n",
    "\n",
    "\n",
    "#2. 建立模型\n",
    "#2.1 构建神经网络模型\n",
    "def build_model():\n",
    "    #初始化BP网络\n",
    "    model = models.Sequential()\n",
    "\n",
    "    #进行层的搭建，注意第二层往后没有输入形状(input_shape)，它可以自动推导出输入的形状等于上一层输出的形状\n",
    "    model.add(layers.Dense(64, activation='relu',input_shape=(X_train.shape[1],)))\n",
    "    model.add(layers.Dense(16, activation='relu',input_shape=(X_train.shape[1],)))\n",
    "    model.add(layers.Dense(1))\n",
    "\n",
    "    #优化器的定义：0.003是学习速率\n",
    "    optimizer = RMSprop(0.003)\n",
    "\n",
    "    #编译网络\n",
    "    # loss: 网络的优化目标，对神经网络的W,b求偏导的对象。\n",
    "            # 这里，采用损失函数是mse，即为均方误差，就是预测值与目标值之差的平方，反应了差距的大小，回归问题用的比较多。\n",
    "    # metrics: 评价网络表现的一种指标\n",
    "            # 这里，采用mae，平均绝对误差，它求的是差值（实际值和预测值）的绝对值，没有平方。\n",
    "    model.compile(optimizer=optimizer, loss='mse', metrics=['mae'])\n",
    "    return model\n",
    "\n",
    "#获得BPNN模型\n",
    "model = build_model()\n",
    "#输出网络的结构\n",
    "model.summary()\n",
    "\n",
    "#3. 训练模型\n",
    "# 参数说明：\n",
    "#  epoch:   迭代次数\n",
    "#  verbose: 0：不输出训练过程，1：输出训练进度，2：输出每一个epoch\n",
    "#  validation_split: 每个epoch结束后测试的模型的指标，如损失函数、精确度等\n",
    "EPOCH=200 #迭代次数（所有训练数据重复使用200次）\n",
    "history = model.fit(X_train, Y_train,\n",
    "                    epochs=EPOCH,\n",
    "                    verbose = 2,\n",
    "                    validation_split=0.2)\n",
    "\n",
    "#4. 模型预测和性能评价\n",
    "#预测\n",
    "Y_pred = model.predict(X_test)\n",
    "Y_pred = Y_pred.flatten(order='C')  #预测结果转变为行向量, 否则报错\n",
    "\n",
    "#在测试集上评估\n",
    "[loss, mae] = model.evaluate(X_test, Y_test, verbose=1)\n",
    "mse= mean_squared_error(Y_test, Y_pred)\n",
    "print(\"\\nTesting set Mean Abs Error: {:7.2f}\".format(mae * 1000))  \n",
    "print(\"\\nTesting set MSE: {:7.2f}\".format(mse * 1000))\n",
    "#5. 绘图展示模型的预测结果\n",
    "#5.1 图4：训练过程可视化——输出200次迭代的MAE曲线\n",
    "plot_history(history)\n",
    "\n",
    "#5.2 图5： 预测结果和实际结果之间的差异\n",
    "plt.figure(figsize=[9,7])\n",
    "plt.rcParams['font.sans-serif']=['SimHei']\n",
    "t = np.arange(len(X_test))\n",
    "plt.plot(t, Y_test, 'r-', linewidth=2, label=r'真实数据')\n",
    "plt.plot(t, Y_pred, 'g-', linewidth=2, label=r'回归模型的预测结果')\n",
    "plt.legend(loc='upper left')\n",
    "plt.title(r'BPNN回归预测白葡萄酒质量', fontsize=18)\n",
    "\n",
    "#5.3 图6： 测试误差的分布直方图\n",
    "plt.figure(figsize=[9,7])\n",
    "plt.rcParams['font.sans-serif']=['SimHei']\n",
    "error = Y_pred - Y_test\n",
    "n,bins,patches = plt.hist(error, bins = 50) # 分成50块 查看每个error区间内对应的数量\n",
    "plt.xlabel(r\"预测误差\")\n",
    "plt.ylabel(r\"数量\")\n",
    "plt.show()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 129,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[ 0.08357788 -0.14493973  0.01804302  0.34554835 -0.02266054  0.06279802\n",
      "  0.00128331 -0.51537762  0.15916116  0.14401883] 0.4800872283284764\n",
      "fixed acidity\n",
      "y= 0.083578 * fixed acidity + -0.144940 * volatile acidity + 0.018043 * citric acid +0.345548 * residual sugar + -0.022661 * chlorides + 0.062798 * free sulfur dioxide+0.001283 * total sulfur dioxide + -0.515378 * density + 0.159161 * pH+0.144019 * alcohol+ 0.480087\n",
      "MAE: 97.7542300665677\n",
      "MSE: 16.3744686598429\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# 利用多元线性归回模型，预测\n",
    "\n",
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "import pandas as pd\n",
    "from sklearn.model_selection import train_test_split\n",
    "from sklearn.linear_model import LinearRegression\n",
    "\n",
    "#自定义划分数据集的函数:假设数据集有序，前70%为训练集，后30%测试\n",
    "def split_data(xdata, ydata, test_size=0.3):\n",
    "    num= xdata.shape[0]\n",
    "    split_point= round(num*(1-test_size))\n",
    "    \n",
    "    x_train= xdata.iloc[1:split_point, :]\n",
    "    y_train= ydata[1:split_point]\n",
    "    x_test= xdata.iloc[split_point:, :]\n",
    "    y_test= ydata[split_point:]\n",
    "    \n",
    "    return x_train, x_test, y_train, y_test\n",
    "\n",
    "\n",
    "#1 获得数据集\n",
    "#data = pd.read_csv('NEW_wine.csv')  \n",
    "#data = pd.read_csv('NEW_wine1.csv') \n",
    "data = pd.read_csv('NEW_wine2.csv') \n",
    "x= data[['fixed acidity','volatile acidity','citric acid','residual sugar','chlorides','free sulfur dioxide','total sulfur dioxide','density','pH','alcohol']]\n",
    "y= data['quality']\n",
    "\n",
    "x_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.3, random_state=1234)\n",
    "#x_train, x_test, y_train, y_test= split_data(x, y, test_size=0.3)\n",
    "\n",
    "#2. 训练Linear Regression模型\n",
    "linreg = LinearRegression()\n",
    "model = linreg.fit(x_train, y_train)\n",
    "\n",
    "\n",
    "#3. 分别输出参数b1, b2和b3，b4,b5,b6,b7,b8 以及常数项（截距）b0的值\n",
    "print(linreg.coef_, linreg.intercept_)\n",
    "#输出回归模型\n",
    "beta=linreg.coef_\n",
    "X_name=x.columns\n",
    "print(X_name[0])\n",
    "print('y= %f * %s + %f * %s + %f * %s +%f * %s + %f * %s + %f * %s+%f * %s + %f * %s + %f * %s+%f * %s+ %f'%(beta[0], X_name[0],beta[1],X_name[1]\n",
    "      ,beta[2],X_name[2],beta[3], X_name[3],beta[4],X_name[4]\n",
    "      ,beta[5],X_name[5],beta[6], X_name[6],beta[7],X_name[7]\n",
    "      ,beta[8],X_name[8],beta[9],X_name[9],linreg.intercept_))\n",
    "\n",
    "\n",
    "#4. 预测和评价\n",
    "y_pred = linreg.predict(x_test)\n",
    "#用MAE做性能评价：\n",
    "from sklearn.metrics import mean_absolute_error, mean_squared_error\n",
    "mae= mean_absolute_error(y_test, y_pred)\n",
    "mse= mean_squared_error(y_test, y_pred)\n",
    "print(\"MAE:\",mae*1000)\n",
    "print(\"MSE:\",mse*1000)\n",
    "\n",
    "\n",
    "\n",
    "#5. 绘图，比较y_test和y_pred\n",
    "plt.figure(facecolor='w')\n",
    "plt.rcParams['font.sans-serif']=['SimHei']\n",
    "t = np.arange(len(x_test))\n",
    "plt.plot(t, y_test, 'r-', linewidth=2, label=r'真实数据')\n",
    "plt.plot(t, y_pred, 'g-', linewidth=2, label=r'预测数据')\n",
    "plt.legend(loc='upper left')\n",
    "plt.title(r'线性回归预测白葡萄酒的质量', fontsize=18)\n",
    "plt.grid(b=True, ls=':')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.9"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
